{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/sanity/env.ts"],"sourcesContent":["export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2024-12-10'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,aACX,QAAQ,GAAG,CAAC,8BAA8B,IAAI;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/sanity/schemaTypes/blockContentType.ts"],"sourcesContent":["import {defineType, defineArrayMember} from 'sanity'\nimport {ImageIcon} from '@sanity/icons'\n\n/**\n * This is the schema type for block content used in the post document type\n * Importing this type into the studio configuration's `schema` property\n * lets you reuse it in other document types with:\n *  {\n *    name: 'someName',\n *    title: 'Some title',\n *    type: 'blockContent'\n *  }\n */\n\nexport const blockContentType = defineType({\n  title: 'Block Content',\n  name: 'blockContent',\n  type: 'array',\n  of: [\n    defineArrayMember({\n      type: 'block',\n      // Styles let you define what blocks can be marked up as. The default\n      // set corresponds with HTML tags, but you can set any title or value\n      // you want, and decide how you want to deal with it where you want to\n      // use your content.\n      styles: [\n        {title: 'Normal', value: 'normal'},\n        {title: 'H1', value: 'h1'},\n        {title: 'H2', value: 'h2'},\n        {title: 'H3', value: 'h3'},\n        {title: 'H4', value: 'h4'},\n        {title: 'Quote', value: 'blockquote'},\n      ],\n      lists: [{title: 'Bullet', value: 'bullet'}],\n      // Marks let you mark up inline text in the Portable Text Editor\n      marks: {\n        // Decorators usually describe a single property – e.g. a typographic\n        // preference or highlighting\n        decorators: [\n          {title: 'Strong', value: 'strong'},\n          {title: 'Emphasis', value: 'em'},\n        ],\n        // Annotations can be any object structure – e.g. a link or a footnote.\n        annotations: [\n          {\n            title: 'URL',\n            name: 'link',\n            type: 'object',\n            fields: [\n              {\n                title: 'URL',\n                name: 'href',\n                type: 'url',\n              },\n            ],\n          },\n        ],\n      },\n    }),\n    // You can add additional types here. Note that you can't use\n    // primitive types such as 'string' and 'number' in the same array\n    // as a block type.\n    defineArrayMember({\n      type: 'image',\n      icon: ImageIcon,\n      options: {hotspot: true},\n      fields: [\n        {\n          name: 'alt',\n          type: 'string',\n          title: 'Alternative Text',\n        }\n      ]\n    }),\n  ],\n})\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAaO,MAAM,mBAAmB,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IACzC,OAAO;IACP,MAAM;IACN,MAAM;IACN,IAAI;QACF,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAChB,MAAM;YACN,qEAAqE;YACrE,qEAAqE;YACrE,sEAAsE;YACtE,oBAAoB;YACpB,QAAQ;gBACN;oBAAC,OAAO;oBAAU,OAAO;gBAAQ;gBACjC;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAM,OAAO;gBAAI;gBACzB;oBAAC,OAAO;oBAAS,OAAO;gBAAY;aACrC;YACD,OAAO;gBAAC;oBAAC,OAAO;oBAAU,OAAO;gBAAQ;aAAE;YAC3C,gEAAgE;YAChE,OAAO;gBACL,qEAAqE;gBACrE,6BAA6B;gBAC7B,YAAY;oBACV;wBAAC,OAAO;wBAAU,OAAO;oBAAQ;oBACjC;wBAAC,OAAO;wBAAY,OAAO;oBAAI;iBAChC;gBACD,uEAAuE;gBACvE,aAAa;oBACX;wBACE,OAAO;wBACP,MAAM;wBACN,MAAM;wBACN,QAAQ;4BACN;gCACE,OAAO;gCACP,MAAM;gCACN,MAAM;4BACR;yBACD;oBACH;iBACD;YACH;QACF;QACA,6DAA6D;QAC7D,kEAAkE;QAClE,mBAAmB;QACnB,CAAA,GAAA,kJAAA,CAAA,oBAAiB,AAAD,EAAE;YAChB,MAAM;YACN,MAAM,kJAAA,CAAA,YAAS;YACf,SAAS;gBAAC,SAAS;YAAI;YACvB,QAAQ;gBACN;oBACE,MAAM;oBACN,MAAM;oBACN,OAAO;gBACT;aACD;QACH;KACD;AACH"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/sanity/schemaTypes/categoryType.ts"],"sourcesContent":["import {TagIcon} from \"@sanity/icons\"\nimport {defineField, defineType} from \"sanity\"\n\nexport const categoryType = defineType({\n  name: \"category\",\n  title: \"Category\",\n  type: \"document\",\n  icon: TagIcon,\n  fields: [\n    defineField({\n      name: \"title\",\n      type: \"string\",\n    }),\n    defineField({\n      name: \"slug\",\n      type: \"slug\",\n      options: {\n        source: \"title\",\n      },\n    }),\n    defineField({\n      name: \"description\",\n      type: \"text\",\n    }),\n  ],\n  preview: {\n    select: {\n      title: \"title\",\n      subtitle: \"description\",\n    },\n  },\n})\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,MAAM,eAAe,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IACrC,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,kJAAA,CAAA,UAAO;IACb,QAAQ;QACN,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;YACN,SAAS;gBACP,QAAQ;YACV;QACF;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACV,MAAM;YACN,MAAM;QACR;KACD;IACD,SAAS;QACP,QAAQ;YACN,OAAO;YACP,UAAU;QACZ;IACF;AACF"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/sanity/schemaTypes/productType.ts"],"sourcesContent":["import { TrolleyIcon } from \"@sanity/icons\";\r\nimport { defineField, defineType } from \"sanity\";\r\n\r\nexport const productType = defineType({\r\n    name: \"product\",\r\n    title: \"Product\",\r\n    type: \"document\",\r\n    icon: TrolleyIcon,\r\n    fields: [\r\n        defineField({\r\n            name:\"name\",\r\n            title: \"Product Name\",\r\n            type: \"string\",\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: \"slug\",\r\n            title: \"Slug\",\r\n            type:\"slug\",\r\n            options: {\r\n                source: \"name\",\r\n                maxLength: 96,\r\n            },\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name:\"image\",\r\n            title: \"Product Image\",\r\n            type: \"image\",\r\n            options: {\r\n                hotspot: true,\r\n            },\r\n        }),\r\n        defineField({\r\n            name:\"description\",\r\n            title: \"Description\",\r\n            type: \"blockContent\",\r\n        }),\r\n        defineField({\r\n            name:\"price\",\r\n            title: \"Price\",\r\n            type: \"number\",\r\n            validation: (Rule) => Rule.required().min(0),\r\n        }),\r\n        defineField({\r\n            name:\"categories\",\r\n            title: \"Categories\",\r\n            type: \"array\",\r\n            of: [{type: \"reference\", to: {type: \"category\"} }],\r\n        }),\r\n        defineField({\r\n            name:\"stock\",\r\n            title: \"Stock\",\r\n            type: \"number\",\r\n            validation: (Rule) => Rule.required().min(0),\r\n        }),\r\n    ],\r\n    preview: {\r\n        select: {\r\n            title: \"name\",\r\n            media: \"image\",\r\n            price: \"price\",\r\n        },\r\n        prepare(select) {\r\n            return {\r\n                title: select.title,\r\n                subtitle: `$${select.price}`,\r\n                media: select.media,\r\n            };\r\n        },\r\n    },\r\n});    \r\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,MAAM,cAAc,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IAClC,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,kJAAA,CAAA,cAAW;IACjB,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAK;YACL,OAAO;YACP,MAAM;YACN,YAAY,CAAC,OAAS,KAAK,QAAQ;QACvC;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,OAAO;YACP,MAAK;YACL,SAAS;gBACL,QAAQ;gBACR,WAAW;YACf;YACA,YAAY,CAAC,OAAS,KAAK,QAAQ;QACvC;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAK;YACL,OAAO;YACP,MAAM;YACN,SAAS;gBACL,SAAS;YACb;QACJ;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAK;YACL,OAAO;YACP,MAAM;QACV;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAK;YACL,OAAO;YACP,MAAM;YACN,YAAY,CAAC,OAAS,KAAK,QAAQ,GAAG,GAAG,CAAC;QAC9C;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAK;YACL,OAAO;YACP,MAAM;YACN,IAAI;gBAAC;oBAAC,MAAM;oBAAa,IAAI;wBAAC,MAAM;oBAAU;gBAAE;aAAE;QACtD;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAK;YACL,OAAO;YACP,MAAM;YACN,YAAY,CAAC,OAAS,KAAK,QAAQ,GAAG,GAAG,CAAC;QAC9C;KACH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;YACP,OAAO;YACP,OAAO;QACX;QACA,SAAQ,MAAM;YACV,OAAO;gBACH,OAAO,OAAO,KAAK;gBACnB,UAAU,CAAC,CAAC,EAAE,OAAO,KAAK,EAAE;gBAC5B,OAAO,OAAO,KAAK;YACvB;QACJ;IACJ;AACJ"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/sanity/schemaTypes/orderType.ts"],"sourcesContent":["import { BasketIcon } from \"@sanity/icons\";\r\nimport { defineArrayMember, defineField, defineType } from \"sanity\";\r\n\r\nexport const orderType = defineType({\r\n    name: \"order\",\r\n    title: \"Order\",\r\n    type: \"document\",\r\n    icon: BasketIcon,\r\n    fields: [\r\n        defineField({\r\n            name: \"orderNumber\",\r\n            title: \"Order Number\",\r\n            type: \"string\",\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: \"stripeCheckoutSessionId\",\r\n            title: \"Stripe Checkout Session ID\",\r\n            type: \"string\",\r\n        }),\r\n        defineField({\r\n            name: \"stripeCustomerId\",\r\n            title: \"Stripe Customer ID\",\r\n            type: \"string\",\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: \"clerkUserId\",\r\n            title: \"Store User ID\",\r\n            type: \"string\",\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: \"customerName\",\r\n            title: \"Customer Name\",\r\n            type: \"string\",\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: \"email\",\r\n            title: \"Customer Email\",\r\n            type: \"string\",\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: \"stripePaymentIntentId\",\r\n            title: \"Stripe Payment Intent ID\",\r\n            type: \"string\",\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: \"products\",\r\n            title: \"Products\",\r\n            type: \"array\",\r\n            of: [\r\n                defineArrayMember({\r\n                    type: \"object\",\r\n                    fields: [\r\n                        defineField({\r\n                            name: \"product\",\r\n                            title: \"Product Bought\",\r\n                            type: \"reference\",\r\n                            to: [{ type: \"product\" }],\r\n                        }),\r\n                        defineField({\r\n                            name: \"quantity\",\r\n                            title: \"Quantity Purchased\",\r\n                            type: \"number\",\r\n                        }),\r\n                    ],\r\n                    preview: {\r\n                        select: {\r\n                            product: \"product.name\",\r\n                            quantity: \"quantity\",\r\n                            image: \"product.image\",\r\n                            price: \"product.price\",\r\n                            currency: \"product.currency\",\r\n                        },\r\n                        prepare(select) {\r\n                            return {\r\n                                title: `${select.product} x ${select.quantity}`,\r\n                                subtitle: `${select.price * select.quantity}`,\r\n                                media: select.image,\r\n                            };\r\n                        },\r\n                    },\r\n                }),\r\n            ],\r\n        }),\r\n        defineField({\r\n            name: \"totalPrice\",\r\n            title: \"Total Price\",\r\n            type: \"number\",\r\n            validation: (Rule) => Rule.required().min(0),\r\n        }),\r\n        defineField({\r\n            name: \"currency\",\r\n            title: \"Currency\",\r\n            type: \"string\",\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n        defineField({\r\n            name: \"amountDiscount\",\r\n            title: \"Amount Discount\",\r\n            type: \"number\",\r\n            validation: (Rule) => Rule.min(0),\r\n        }),\r\n        defineField({\r\n            name: \"status\",\r\n            title: \"Order Status\",\r\n            type: \"string\",\r\n            options: {\r\n                list: [\r\n                    { title: \"Pending\", value: \"pending\" },\r\n                    { title: \"Paid\", value: \"paid\" },\r\n                    { title: \"Shipped\", value: \"shipped\" },\r\n                    { title: \"Delivered\", value: \"delivered\" },\r\n                    { title: \"Cancelled\", value: \"cancelled\" },\r\n                ],\r\n            },\r\n        }),\r\n        defineField({\r\n            name: \"orderDate\",\r\n            title: \"Order Date\",\r\n            type: \"datetime\",\r\n            validation: (Rule) => Rule.required(),\r\n        }),\r\n    ],\r\n    preview: {\r\n        select: {\r\n            name: \"customerNumber\",\r\n            amount: \"totalPrice\",\r\n            currency: \"currency\",\r\n            orderId: \"orderNumber\",\r\n            email: \"email\",\r\n        },\r\n        prepare(select) { // error here => 1:36:02 video time\r\n            const orderIdSnipped = `${select.orderId.slice(0, 5)}...${select.orderId.slice(-5)}`;\r\n            return {\r\n                title: `${select.name} (${orderIdSnipped})`,\r\n                subtitle: `${select.amount} ${select.currency}, ${select.email}`,\r\n                media: BasketIcon,\r\n            };\r\n        },\r\n    },\r\n});\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/sanity/schemaTypes/salesType.ts"],"sourcesContent":["import { TagIcon } from '@sanity/icons';\r\nimport { defineField, defineType } from 'sanity';\r\n//usando comilla simple en lugar de comilla doble, puede ser un problema\r\nexport const salesType = defineType({\r\n    name: 'sale',\r\n    title: 'Sale',\r\n    type: 'document',\r\n    icon: TagIcon,\r\n    fields: [\r\n        defineField({\r\n            name: 'title',\r\n            type: 'string',\r\n            title: 'Sale Title',\r\n        }),\r\n        defineField({\r\n            name: 'description',\r\n            type: 'text',\r\n            title: 'Sale Description',\r\n        }),\r\n        defineField({\r\n            name: 'discountAmount',\r\n            type: 'number',\r\n            title: 'Discount Amount',\r\n            description: 'Amount off percentage or fixed value',\r\n        }),\r\n        defineField({\r\n            name: 'couponCode',\r\n            type: 'string',\r\n            title: 'Coupon Code',\r\n        }),\r\n        defineField({\r\n            name: 'validFrom',\r\n            type: 'datetime',\r\n            title: 'Valid From',\r\n        }),\r\n        defineField({\r\n            name: 'validUntil',\r\n            type: 'datetime',\r\n            title: 'Valid Until',\r\n        }),\r\n        defineField({\r\n            name: 'isActive',\r\n            type: 'boolean',\r\n            title: 'Is Active',\r\n            description: 'Toggle to activate or deactivate the sale',\r\n            initialValue: true,\r\n        }),\r\n    ],\r\n    preview: {\r\n        select: {\r\n            title: 'title',\r\n            discountAmount: 'discountAmount',\r\n            couponCode: 'couponCode',\r\n            isActive: 'isActive',\r\n        },\r\n        prepare(selection) {\r\n            const { title, discountAmount, couponCode, isActive } = selection;\r\n            const status = isActive ? 'Active' : 'Inactive';\r\n            return {\r\n                title,\r\n                subtitle: `${discountAmount}% off - Code: ${couponCode} - ${status}`,\r\n            };\r\n        },\r\n    },\r\n});"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,MAAM,YAAY,CAAA,GAAA,kJAAA,CAAA,aAAU,AAAD,EAAE;IAChC,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM,kJAAA,CAAA,UAAO;IACb,QAAQ;QACJ,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;QACX;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;QACX;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;QACjB;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;QACX;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;QACX;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;QACX;QACA,CAAA,GAAA,kJAAA,CAAA,cAAW,AAAD,EAAE;YACR,MAAM;YACN,MAAM;YACN,OAAO;YACP,aAAa;YACb,cAAc;QAClB;KACH;IACD,SAAS;QACL,QAAQ;YACJ,OAAO;YACP,gBAAgB;YAChB,YAAY;YACZ,UAAU;QACd;QACA,SAAQ,SAAS;YACb,MAAM,EAAE,KAAK,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG;YACxD,MAAM,SAAS,WAAW,WAAW;YACrC,OAAO;gBACH;gBACA,UAAU,GAAG,eAAe,cAAc,EAAE,WAAW,GAAG,EAAE,QAAQ;YACxE;QACJ;IACJ;AACJ"}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/sanity/schemaTypes/index.ts"],"sourcesContent":["import { type SchemaTypeDefinition } from 'sanity'\n\nimport {blockContentType} from './blockContentType'\nimport {categoryType} from './categoryType'\nimport { productType } from './productType'\nimport { orderType } from './orderType'\nimport { salesType } from './salesType'\n\nexport const schema: { types: SchemaTypeDefinition[] } = {\n  types: [blockContentType, categoryType, productType, orderType, salesType],\n};\n"],"names":[],"mappings":";;;AAEA;AACA;AACA;AACA;AACA;;;;;;AAEO,MAAM,SAA4C;IACvD,OAAO;QAAC,yIAAA,CAAA,mBAAgB;QAAE,qIAAA,CAAA,eAAY;QAAE,oIAAA,CAAA,cAAW;QAAE,kIAAA,CAAA,YAAS;QAAE,kIAAA,CAAA,YAAS;KAAC;AAC5E"}},
    {"offset": {"line": 544, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/sanity/structure.ts"],"sourcesContent":["import type {StructureResolver} from 'sanity/structure'\n\n// https://www.sanity.io/docs/structure-builder-cheat-sheet\nexport const structure: StructureResolver = (S) =>\n  S.list()\n    .title('Freemium')\n    .items([\n      S.documentTypeListItem(\"category\").title(\"Categories\"),\n      S.divider(),\n      ...S.documentTypeListItems().filter(\n        (item) => item.getId() && ![\"post\", \"category\"].includes(item.getId()!)\n      ),\n    ])\n"],"names":[],"mappings":";;;AAGO,MAAM,YAA+B,CAAC,IAC3C,EAAE,IAAI,GACH,KAAK,CAAC,YACN,KAAK,CAAC;QACL,EAAE,oBAAoB,CAAC,YAAY,KAAK,CAAC;QACzC,EAAE,OAAO;WACN,EAAE,qBAAqB,GAAG,MAAM,CACjC,CAAC,OAAS,KAAK,KAAK,MAAM,CAAC;gBAAC;gBAAQ;aAAW,CAAC,QAAQ,CAAC,KAAK,KAAK;KAEtE"}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/sanity.config.ts"],"sourcesContent":["'use client'\n\n/**\n * This configuration is used to for the Sanity Studio that’s mounted on the `\\app\\studio\\[[...tool]]\\page.tsx` route\n */\n\nimport {visionTool} from '@sanity/vision'\nimport {defineConfig} from 'sanity'\nimport {structureTool} from 'sanity/structure'\nimport { presentationTool } from 'sanity/presentation'\n\n// Go to https://www.sanity.io/docs/api-versioning to learn how API versioning works\nimport {apiVersion, dataset, projectId} from './sanity/env'\nimport {schema} from './sanity/schemaTypes'\nimport {structure} from './sanity/structure'\n\nexport default defineConfig({\n  basePath: '/studio',\n  projectId,\n  dataset,\n  // Add and edit the content schema in the './sanity/schemaTypes' folder\n  schema,\n  plugins: [\n    structureTool({structure}),\n    // Vision is for querying with GROQ from inside the Studio\n    // https://www.sanity.io/docs/the-vision-plugin\n    visionTool({defaultApiVersion: apiVersion}),\n    presentationTool({\n      previewUrl: {\n        preview: \"/\",\n        previewMode: {\n          enable: \"/draft-mode/enable\",\n        },\n      },\n    }),\n  ],\n});\n"],"names":[],"mappings":";;;AAWA,oFAAoF;AACpF;AACA;AACA;AAPA;AACA;AANA;;CAEC,GAED;AAGA;AATA;;;;;;;;uCAgBe,CAAA,GAAA,uJAAA,CAAA,eAAY,AAAD,EAAE;IAC1B,UAAU;IACV,WAAA,6GAAA,CAAA,YAAS;IACT,SAAA,6GAAA,CAAA,UAAO;IACP,uEAAuE;IACvE,QAAA,8HAAA,CAAA,SAAM;IACN,SAAS;QACP,CAAA,GAAA,uJAAA,CAAA,gBAAa,AAAD,EAAE;YAAC,WAAA,mHAAA,CAAA,YAAS;QAAA;QACxB,0DAA0D;QAC1D,+CAA+C;QAC/C,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,EAAE;YAAC,mBAAmB,6GAAA,CAAA,aAAU;QAAA;QACzC,CAAA,GAAA,0KAAA,CAAA,mBAAgB,AAAD,EAAE;YACf,YAAY;gBACV,SAAS;gBACT,aAAa;oBACX,QAAQ;gBACV;YACF;QACF;KACD;AACH"}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
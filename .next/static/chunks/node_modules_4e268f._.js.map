{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/fast-deep-equal/index.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"names":[],"mappings":"AAAA;AAEA,sDAAsD;AAItD,OAAO,OAAO,GAAG,SAAS,MAAM,CAAC,EAAE,CAAC;IAClC,IAAI,MAAM,GAAG,OAAO;IAEpB,IAAI,KAAK,KAAK,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU;QAC1D,IAAI,EAAE,WAAW,KAAK,EAAE,WAAW,EAAE,OAAO;QAE5C,IAAI,QAAQ,GAAG;QACf,IAAI,MAAM,OAAO,CAAC,IAAI;YACpB,SAAS,EAAE,MAAM;YACjB,IAAI,UAAU,EAAE,MAAM,EAAE,OAAO;YAC/B,IAAK,IAAI,QAAQ,QAAQ,GACvB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,OAAO;YACjC,OAAO;QACT;QAIA,IAAI,EAAE,WAAW,KAAK,QAAQ,OAAO,EAAE,MAAM,KAAK,EAAE,MAAM,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK;QACjF,IAAI,EAAE,OAAO,KAAK,OAAO,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,OAAO,EAAE,OAAO;QAC5E,IAAI,EAAE,QAAQ,KAAK,OAAO,SAAS,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ;QAEhF,OAAO,OAAO,IAAI,CAAC;QACnB,SAAS,KAAK,MAAM;QACpB,IAAI,WAAW,OAAO,IAAI,CAAC,GAAG,MAAM,EAAE,OAAO;QAE7C,IAAK,IAAI,QAAQ,QAAQ,GACvB,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO;QAEhE,IAAK,IAAI,QAAQ,QAAQ,GAAI;YAC3B,IAAI,MAAM,IAAI,CAAC,EAAE;YAEjB,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,OAAO;QACrC;QAEA,OAAO;IACT;IAEA,oCAAoC;IACpC,OAAO,MAAI,KAAK,MAAI;AACtB","ignoreList":[0]}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/xstate/actors/dist/xstate-actors.development.esm.js"],"sourcesContent":["import { X as XSTATE_STOP, A as createActor } from '../../dist/raise-1db27a82.development.esm.js';\nimport '../../dev/dist/xstate-dev.development.esm.js';\n\n/**\n * Represents an actor created by `fromTransition`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromTransition,\n *   createActor,\n *   type AnyActorSystem\n * } from 'xstate';\n *\n * //* The actor's stored context.\n * type Context = {\n *   // The current count.\n *   count: number;\n *   // The amount to increase `count` by.\n *   step: number;\n * };\n * // The events the actor receives.\n * type Event = { type: 'increment' };\n * // The actor's input.\n * type Input = { step?: number };\n *\n * // Actor logic that increments `count` by `step` when it receives an event of\n * // type `increment`.\n * const logic = fromTransition<Context, Event, AnyActorSystem, Input>(\n *   (state, event, actorScope) => {\n *     actorScope.self;\n *     //         ^? TransitionActorRef<Context, Event>\n *\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + state.step\n *       };\n *     }\n *     return state;\n *   },\n *   ({ input, self }) => {\n *     self;\n *     // ^? TransitionActorRef<Context, Event>\n *\n *     return {\n *       count: 0,\n *       step: input.step ?? 1\n *     };\n *   }\n * );\n *\n * const actor = createActor(logic, { input: { step: 10 } });\n * //    ^? TransitionActorRef<Context, Event>\n * ```\n *\n * @see {@link fromTransition}\n */\n\n/**\n * Returns actor logic given a transition function and its initial state.\n *\n * A “transition function” is a function that takes the current `state` and\n * received `event` object as arguments, and returns the next state, similar to\n * a reducer.\n *\n * Actors created from transition logic (“transition actors”) can:\n *\n * - Receive events\n * - Emit snapshots of its state\n *\n * The transition function’s `state` is used as its transition actor’s\n * `context`.\n *\n * Note that the \"state\" for a transition function is provided by the initial\n * state argument, and is not the same as the State object of an actor or a\n * state within a machine configuration.\n *\n * @example\n *\n * ```ts\n * const transitionLogic = fromTransition(\n *   (state, event) => {\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + 1\n *       };\n *     }\n *     return state;\n *   },\n *   { count: 0 }\n * );\n *\n * const transitionActor = createActor(transitionLogic);\n * transitionActor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n * transitionActor.start();\n * // => {\n * //   status: 'active',\n * //   context: { count: 0 },\n * //   ...\n * // }\n *\n * transitionActor.send({ type: 'increment' });\n * // => {\n * //   status: 'active',\n * //   context: { count: 1 },\n * //   ...\n * // }\n * ```\n *\n * @param transition The transition function used to describe the transition\n *   logic. It should return the next state given the current state and event.\n *   It receives the following arguments:\n *\n *   - `state` - the current state.\n *   - `event` - the received event.\n *   - `actorScope` - the actor scope object, with properties like `self` and\n *       `system`.\n *\n * @param initialContext The initial state of the transition function, either an\n *   object representing the state, or a function which returns a state object.\n *   If a function, it will receive as its only argument an object with the\n *   following properties:\n *\n *   - `input` - the `input` provided to its parent transition actor.\n *   - `self` - a reference to its parent transition actor.\n *\n * @returns Actor logic\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromTransition(transition, initialContext) {\n  return {\n    config: transition,\n    transition: (snapshot, event, actorScope) => {\n      return {\n        ...snapshot,\n        context: transition(snapshot.context, event, actorScope)\n      };\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: typeof initialContext === 'function' ? initialContext({\n          input\n        }) : initialContext\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n}\n\nconst instanceStates = /* #__PURE__ */new WeakMap();\n\n/**\n * Represents an actor created by `fromCallback`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromCallback, createActor } from 'xstate';\n *\n * // The events the actor receives.\n * type Event = { type: 'someEvent' };\n * // The actor's input.\n * type Input = { name: string };\n *\n * // Actor logic that logs whenever it receives an event of type `someEvent`.\n * const logic = fromCallback<Event, Input>(({ self, input, receive }) => {\n *   self;\n *   // ^? CallbackActorRef<Event, Input>\n *\n *   receive((event) => {\n *     if (event.type === 'someEvent') {\n *       console.log(`${input.name}: received \"someEvent\" event`);\n *       // logs 'myActor: received \"someEvent\" event'\n *     }\n *   });\n * });\n *\n * const actor = createActor(logic, { input: { name: 'myActor' } });\n * //    ^? CallbackActorRef<Event, Input>\n * ```\n *\n * @see {@link fromCallback}\n */\n\n/**\n * An actor logic creator which returns callback logic as defined by a callback\n * function.\n *\n * @remarks\n * Useful for subscription-based or other free-form logic that can send events\n * back to the parent actor.\n *\n * Actors created from callback logic (“callback actors”) can:\n *\n * - Receive events via the `receive` function\n * - Send events to the parent actor via the `sendBack` function\n *\n * Callback actors are a bit different from other actors in that they:\n *\n * - Do not work with `onDone`\n * - Do not produce a snapshot using `.getSnapshot()`\n * - Do not emit values when used with `.subscribe()`\n * - Can not be stopped with `.stop()`\n *\n * @example\n *\n * ```typescript\n * const callbackLogic = fromCallback(({ sendBack, receive }) => {\n *   let lockStatus = 'unlocked';\n *\n *   const handler = (event) => {\n *     if (lockStatus === 'locked') {\n *       return;\n *     }\n *     sendBack(event);\n *   };\n *\n *   receive((event) => {\n *     if (event.type === 'lock') {\n *       lockStatus = 'locked';\n *     } else if (event.type === 'unlock') {\n *       lockStatus = 'unlocked';\n *     }\n *   });\n *\n *   document.body.addEventListener('click', handler);\n *\n *   return () => {\n *     document.body.removeEventListener('click', handler);\n *   };\n * });\n * ```\n *\n * @param callback - The callback function used to describe the callback logic\n *   The callback function is passed an object with the following properties:\n *\n *   - `receive` - A function that can send events back to the parent actor; the\n *       listener is then called whenever events are received by the callback\n *       actor\n *   - `sendBack` - A function that can send events back to the parent actor\n *   - `input` - Data that was provided to the callback actor\n *   - `self` - The parent actor of the callback actor\n *   - `system` - The actor system to which the callback actor belongs The callback\n *       function can (optionally) return a cleanup function, which is called\n *       when the actor is stopped.\n *\n * @returns Callback logic\n * @see {@link CallbackLogicFunction} for more information about the callback function and its object argument\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromCallback(callback) {\n  const logic = {\n    config: callback,\n    start: (state, actorScope) => {\n      const {\n        self,\n        system,\n        emit\n      } = actorScope;\n      const callbackState = {\n        receivers: undefined,\n        dispose: undefined\n      };\n      instanceStates.set(self, callbackState);\n      callbackState.dispose = callback({\n        input: state.input,\n        system,\n        self,\n        sendBack: event => {\n          if (self.getSnapshot().status === 'stopped') {\n            return;\n          }\n          if (self._parent) {\n            system._relay(self, self._parent, event);\n          }\n        },\n        receive: listener => {\n          callbackState.receivers ??= new Set();\n          callbackState.receivers.add(listener);\n        },\n        emit\n      });\n    },\n    transition: (state, event, actorScope) => {\n      const callbackState = instanceStates.get(actorScope.self);\n      if (event.type === XSTATE_STOP) {\n        state = {\n          ...state,\n          status: 'stopped',\n          error: undefined\n        };\n        callbackState.dispose?.();\n        return state;\n      }\n      callbackState.receivers?.forEach(receiver => receiver(event));\n      return state;\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n  return logic;\n}\n\nconst XSTATE_OBSERVABLE_NEXT = 'xstate.observable.next';\nconst XSTATE_OBSERVABLE_ERROR = 'xstate.observable.error';\nconst XSTATE_OBSERVABLE_COMPLETE = 'xstate.observable.complete';\n\n/**\n * Represents an actor created by `fromObservable` or `fromEventObservable`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * // The type of the value observed by the actor's logic.\n * type Context = number;\n * // The actor's input.\n * type Input = { period?: number };\n *\n * // Actor logic that observes a number incremented every `input.period`\n * // milliseconds (default: 1_000).\n * const logic = fromObservable<Context, Input>(({ input, self }) => {\n *   self;\n *   // ^? ObservableActorRef<Event, Input>\n *\n *   return interval(input.period ?? 1_000);\n * });\n *\n * const actor = createActor(logic, { input: { period: 2_000 } });\n * //    ^? ObservableActorRef<Event, Input>\n * ```\n *\n * @see {@link fromObservable}\n * @see {@link fromEventObservable}\n */\n\n/**\n * Observable actor logic is described by an observable stream of values. Actors\n * created from observable logic (“observable actors”) can:\n *\n * - Emit snapshots of the observable’s emitted value\n *\n * The observable’s emitted value is used as its observable actor’s `context`.\n *\n * Sending events to observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * const logic = fromObservable((obj) => interval(1000));\n *\n * const actor = createActor(logic);\n *\n * actor.subscribe((snapshot) => {\n *   console.log(snapshot.context);\n * });\n *\n * actor.start();\n * // At every second:\n * // Logs 0\n * // Logs 1\n * // Logs 2\n * // ...\n * ```\n *\n * @param observableCreator A function that creates an observable. It receives\n *   one argument, an object with the following properties:\n *\n *   - `input` - Data that was provided to the observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the observable actor belongs\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n * @see {@link https://rxjs.dev} for documentation on RxJS Observable and observable creators.\n * @see {@link Subscribable} interface in XState, which is based on and compatible with RxJS Observable.\n */\nfunction fromObservable(observableCreator) {\n  // TODO: add event types\n  const logic = {\n    config: observableCreator,\n    transition: (snapshot, event) => {\n      if (snapshot.status !== 'active') {\n        return snapshot;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_NEXT:\n          {\n            const newSnapshot = {\n              ...snapshot,\n              context: event.data\n            };\n            return newSnapshot;\n          }\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...snapshot,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...snapshot,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_STOP:\n          snapshot._subscription.unsubscribe();\n          return {\n            ...snapshot,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return snapshot;\n      }\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = observableCreator({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_NEXT,\n            data: value\n          });\n        },\n        error: err => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...state\n    }) => state,\n    restoreSnapshot: state => ({\n      ...state,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\n/**\n * Creates event observable logic that listens to an observable that delivers\n * event objects.\n *\n * Event observable actor logic is described by an observable stream of\n * {@link https://stately.ai/docs/transitions#event-objects | event objects}.\n * Actors created from event observable logic (“event observable actors”) can:\n *\n * - Implicitly send events to its parent actor\n * - Emit snapshots of its emitted event objects\n *\n * Sending events to event observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromEventObservable,\n *   Subscribable,\n *   EventObject,\n *   createMachine,\n *   createActor\n * } from 'xstate';\n * import { fromEvent } from 'rxjs';\n *\n * const mouseClickLogic = fromEventObservable(\n *   () => fromEvent(document.body, 'click') as Subscribable<EventObject>\n * );\n *\n * const canvasMachine = createMachine({\n *   invoke: {\n *     // Will send mouse `click` events to the canvas actor\n *     src: mouseClickLogic\n *   }\n * });\n *\n * const canvasActor = createActor(canvasMachine);\n * canvasActor.start();\n * ```\n *\n * @param lazyObservable A function that creates an observable that delivers\n *   event objects. It receives one argument, an object with the following\n *   properties:\n *\n *   - `input` - Data that was provided to the event observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the event observable actor belongs.\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n */\nfunction fromEventObservable(lazyObservable) {\n  // TODO: event types\n  const logic = {\n    config: lazyObservable,\n    transition: (state, event) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...state,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_STOP:\n          state._subscription.unsubscribe();\n          return {\n            ...state,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return state;\n      }\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = lazyObservable({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value => {\n          if (self._parent) {\n            system._relay(self, self._parent, value);\n          }\n        },\n        error: err => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...snapshot\n    }) => snapshot,\n    restoreSnapshot: snapshot => ({\n      ...snapshot,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\nconst XSTATE_PROMISE_RESOLVE = 'xstate.promise.resolve';\nconst XSTATE_PROMISE_REJECT = 'xstate.promise.reject';\n\n/**\n * Represents an actor created by `fromPromise`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromPromise, createActor } from 'xstate';\n *\n * // The actor's resolved output\n * type Output = string;\n * // The actor's input.\n * type Input = { message: string };\n *\n * // Actor logic that fetches the url of an image of a cat saying `input.message`.\n * const logic = fromPromise<Output, Input>(async ({ input, self }) => {\n *   self;\n *   // ^? PromiseActorRef<Output, Input>\n *\n *   const data = await fetch(\n *     `https://cataas.com/cat/says/${input.message}`\n *   );\n *   const url = await data.json();\n *   return url;\n * });\n *\n * const actor = createActor(logic, { input: { message: 'hello world' } });\n * //    ^? PromiseActorRef<Output, Input>\n * ```\n *\n * @see {@link fromPromise}\n */\n\nconst controllerMap = new WeakMap();\n\n/**\n * An actor logic creator which returns promise logic as defined by an async\n * process that resolves or rejects after some time.\n *\n * Actors created from promise actor logic (“promise actors”) can:\n *\n * - Emit the resolved value of the promise\n * - Output the resolved value of the promise\n *\n * Sending events to promise actors will have no effect.\n *\n * @example\n *\n * ```ts\n * const promiseLogic = fromPromise(async () => {\n *   const result = await fetch('https://example.com/...').then((data) =>\n *     data.json()\n *   );\n *\n *   return result;\n * });\n *\n * const promiseActor = createActor(promiseLogic);\n * promiseActor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n * promiseActor.start();\n * // => {\n * //   output: undefined,\n * //   status: 'active'\n * //   ...\n * // }\n *\n * // After promise resolves\n * // => {\n * //   output: { ... },\n * //   status: 'done',\n * //   ...\n * // }\n * ```\n *\n * @param promiseCreator A function which returns a Promise, and accepts an\n *   object with the following properties:\n *\n *   - `input` - Data that was provided to the promise actor\n *   - `self` - The parent actor of the promise actor\n *   - `system` - The actor system to which the promise actor belongs\n *\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromPromise(promiseCreator) {\n  const logic = {\n    config: promiseCreator,\n    transition: (state, event, scope) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_PROMISE_RESOLVE:\n          {\n            const resolvedValue = event.data;\n            return {\n              ...state,\n              status: 'done',\n              output: resolvedValue,\n              input: undefined\n            };\n          }\n        case XSTATE_PROMISE_REJECT:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined\n          };\n        case XSTATE_STOP:\n          {\n            controllerMap.get(scope.self)?.abort();\n            return {\n              ...state,\n              status: 'stopped',\n              input: undefined\n            };\n          }\n        default:\n          return state;\n      }\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      // TODO: determine how to allow customizing this so that promises\n      // can be restarted if necessary\n      if (state.status !== 'active') {\n        return;\n      }\n      const controller = new AbortController();\n      controllerMap.set(self, controller);\n      const resolvedPromise = Promise.resolve(promiseCreator({\n        input: state.input,\n        system,\n        self,\n        signal: controller.signal,\n        emit\n      }));\n      resolvedPromise.then(response => {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_RESOLVE,\n          data: response\n        });\n      }, errorData => {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_REJECT,\n          data: errorData\n        });\n      });\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n  return logic;\n}\n\nconst emptyLogic = fromTransition(_ => undefined, undefined);\nfunction createEmptyActor() {\n  return createActor(emptyLogic);\n}\n\nexport { createEmptyActor, fromCallback, fromEventObservable, fromObservable, fromPromise, fromTransition };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 838, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 874, "column": 0}, "map": {"version":3,"file":"bufferCount.js","sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/rxjs/src/internal/operators/bufferCount.ts"],"sourcesContent":["import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number | null = null): OperatorFunction<T, T[]> {\n  // If no `startBufferEvery` value was supplied, then we're\n  // opening and closing on the bufferSize itself.\n  startBufferEvery = startBufferEvery ?? bufferSize;\n\n  return operate((source, subscriber) => {\n    let buffers: T[][] = [];\n    let count = 0;\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          let toEmit: T[][] | null = null;\n\n          // Check to see if we need to start a buffer.\n          // This will start one at the first value, and then\n          // a new one every N after that.\n          if (count++ % startBufferEvery! === 0) {\n            buffers.push([]);\n          }\n\n          // Push our value into our active buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n            // Check to see if we're over the bufferSize\n            // if we are, record it so we can emit it later.\n            // If we emitted it now and removed it, it would\n            // mutate the `buffers` array while we're looping\n            // over it.\n            if (bufferSize <= buffer.length) {\n              toEmit = toEmit ?? [];\n              toEmit.push(buffer);\n            }\n          }\n\n          if (toEmit) {\n            // We have found some buffers that are over the\n            // `bufferSize`. Emit them, and remove them from our\n            // buffers list.\n            for (const buffer of toEmit) {\n              arrRemove(buffers, buffer);\n              subscriber.next(buffer);\n            }\n          }\n        },\n        () => {\n          // When the source completes, emit all of our\n          // active buffers.\n          for (const buffer of buffers) {\n            subscriber.next(buffer);\n          }\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Clean up our memory when we finalize\n          buffers = null!;\n        }\n      )\n    );\n  });\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AACvC,OAAO,EAAE,wBAAwB,EAAE,MAAM,sBAAsB,CAAC;;AAChE,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;;;;;AAqDxC,SAAU,WAAW,CAAI,UAAkB,EAAE,gBAAsC;IAAtC,IAAA,qBAAA,KAAA,GAAA;QAAA,mBAAA,IAAsC;IAAA;IAGvF,gBAAgB,GAAG,gBAAgB,KAAA,QAAhB,gBAAgB,KAAA,KAAA,IAAhB,gBAAgB,GAAI,UAAU,CAAC;IAElD,8KAAO,WAAA,AAAO,EAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,OAAO,GAAU,EAAE,CAAC;QACxB,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,MAAM,CAAC,SAAS,4LACd,2BAAA,AAAwB,EACtB,UAAU,EACV,SAAC,KAAK;;YACJ,IAAI,MAAM,GAAiB,IAAI,CAAC;YAKhC,IAAI,KAAK,EAAE,GAAG,gBAAiB,KAAK,CAAC,EAAE;gBACrC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAClB;;gBAGD,IAAqB,IAAA,gBAAA,qJAAA,EAAA,OAAO,CAAA,EAAA,cAAA,UAAA,IAAA,EAAA,EAAA,CAAA,YAAA,IAAA,EAAA,cAAA,UAAA,IAAA,GAAE;oBAAzB,IAAM,MAAM,GAAA,YAAA,KAAA;oBACf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAMnB,IAAI,UAAU,IAAI,MAAM,CAAC,MAAM,EAAE;wBAC/B,MAAM,GAAG,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAN,MAAM,GAAI,EAAE,CAAC;wBACtB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACrB;iBACF;;;;;;;;;;;;YAED,IAAI,MAAM,EAAE;;oBAIV,IAAqB,IAAA,yJAAA,WAAA,EAAA,MAAM,CAAA,EAAA,aAAA,SAAA,IAAA,EAAA,EAAA,CAAA,WAAA,IAAA,EAAA,aAAA,SAAA,IAAA,GAAE;wBAAxB,IAAM,MAAM,GAAA,WAAA,KAAA;qMACf,YAAA,AAAS,EAAC,OAAO,EAAE,MAAM,CAAC,CAAC;wBAC3B,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACzB;;;;;;;;;;;;aACF;QACH,CAAC,EACD;;;gBAGE,IAAqB,IAAA,0JAAA,WAAA,EAAA,OAAO,CAAA,EAAA,cAAA,UAAA,IAAA,EAAA,EAAA,CAAA,YAAA,IAAA,EAAA,cAAA,UAAA,IAAA,GAAE;oBAAzB,IAAM,MAAM,GAAA,YAAA,KAAA;oBACf,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACzB;;;;;;;;;;;;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EAED,SAAS,EACT;YAEE,OAAO,GAAG,IAAK,CAAC;QAClB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC","ignoreList":[0]}},
    {"offset": {"line": 962, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 968, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/uuid/dist/esm-browser/native.js"],"sourcesContent":["var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};"],"names":[],"mappings":";;;AAAA,IAAI,aAAa,OAAO,WAAW,eAAe,OAAO,UAAU,IAAI,OAAO,UAAU,CAAC,IAAI,CAAC;uCAC/E;IACb;AACF","ignoreList":[0]}},
    {"offset": {"line": 975, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/uuid/dist/esm-browser/rng.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}"],"names":[],"mappings":"AAAA,6FAA6F;AAC7F,6FAA6F;AAC7F,mCAAmC;;;;AAEnC,IAAI;AACJ,IAAI,QAAQ,IAAI,WAAW;AACZ,SAAS;IACtB,8EAA8E;IAC9E,IAAI,CAAC,iBAAiB;QACpB,4FAA4F;QAC5F,kBAAkB,OAAO,WAAW,eAAe,OAAO,eAAe,IAAI,OAAO,eAAe,CAAC,IAAI,CAAC;QACzG,IAAI,CAAC,iBAAiB;YACpB,MAAM,IAAI,MAAM;QAClB;IACF;IACA,OAAO,gBAAgB;AACzB","ignoreList":[0]}},
    {"offset": {"line": 1000, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1006, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/uuid/dist/esm-browser/regex.js"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;"],"names":[],"mappings":";;;uCAAe","ignoreList":[0]}},
    {"offset": {"line": 1010, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1016, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/uuid/dist/esm-browser/validate.js"],"sourcesContent":["import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,SAAS,IAAI;IACpB,OAAO,OAAO,SAAS,YAAY,0JAAA,CAAA,UAAK,CAAC,IAAI,CAAC;AAChD;uCACe","ignoreList":[0]}},
    {"offset": {"line": 1025, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1031, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/uuid/dist/esm-browser/stringify.js"],"sourcesContent":["import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;"],"names":[],"mappings":";;;;AAAA;;AAEA;;;CAGC,GACD,IAAI,YAAY,EAAE;AAClB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,EAAG;IAC5B,UAAU,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC;AAChD;AACO,SAAS,gBAAgB,GAAG,EAAE,SAAS,CAAC;IAC7C,uEAAuE;IACvE,oFAAoF;IACpF,EAAE;IACF,sEAAsE;IACtE,uEAAuE;IACvE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,EAAE,WAAW;AAClgB;AACA,SAAS,UAAU,GAAG,EAAE,SAAS,CAAC;IAChC,IAAI,OAAO,gBAAgB,KAAK;IAChC,4EAA4E;IAC5E,oBAAoB;IACpB,wEAAwE;IACxE,2BAA2B;IAC3B,mEAAmE;IACnE,IAAI,CAAC,CAAA,GAAA,6JAAA,CAAA,UAAQ,AAAD,EAAE,OAAO;QACnB,MAAM,UAAU;IAClB;IACA,OAAO;AACT;uCACe","ignoreList":[0]}},
    {"offset": {"line": 1065, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1071, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,SAAS,GAAG,OAAO,EAAE,GAAG,EAAE,MAAM;IAC9B,IAAI,2JAAA,CAAA,UAAM,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,SAAS;QACzC,OAAO,2JAAA,CAAA,UAAM,CAAC,UAAU;IAC1B;IACA,UAAU,WAAW,CAAC;IACtB,IAAI,OAAO,QAAQ,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,wJAAA,CAAA,UAAG;IAEhD,gEAAgE;IAChE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO;IAC3B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO;IAE3B,oCAAoC;IACpC,IAAI,KAAK;QACP,SAAS,UAAU;QACnB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG;YAC3B,GAAG,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,EAAE;QAC3B;QACA,OAAO;IACT;IACA,OAAO,CAAA,GAAA,8JAAA,CAAA,kBAAe,AAAD,EAAE;AACzB;uCACe","ignoreList":[0]}},
    {"offset": {"line": 1100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1116, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/comlink/src/common.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/comlink/src/constants.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/comlink/src/request.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/comlink/src/connection.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/comlink/src/controller.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/comlink/src/node.ts"],"sourcesContent":["import {bufferCount, concatMap, defer, filter, fromEvent, map, pipe, take} from 'rxjs'\nimport {fromEventObservable} from 'xstate'\nimport type {ListenInput, ProtocolMessage} from './types'\n\nexport const listenInputFromContext =\n  (\n    config: (\n      | {\n          include: string | string[]\n          exclude?: string | string[]\n        }\n      | {\n          include?: string | string[]\n          exclude: string | string[]\n        }\n    ) & {\n      matches?: boolean\n      count?: number\n      responseType?: string\n    },\n  ) =>\n  <\n    T extends {\n      domain: string\n      connectTo: string\n      name: string\n      target: MessageEventSource | undefined\n    },\n  >({\n    context,\n  }: {\n    context: T\n  }): ListenInput => {\n    const {count, include, exclude, responseType = 'message.received'} = config\n    return {\n      count,\n      domain: context.domain,\n      from: context.connectTo,\n      include: include ? (Array.isArray(include) ? include : [include]) : [],\n      exclude: exclude ? (Array.isArray(exclude) ? exclude : [exclude]) : [],\n      responseType,\n      target: context.target,\n      to: context.name,\n    }\n  }\n\nexport const listenFilter =\n  (input: ListenInput) =>\n  (event: MessageEvent<ProtocolMessage>): boolean => {\n    const {data} = event\n    return (\n      (input.include.length ? input.include.includes(data.type) : true) &&\n      (input.exclude.length ? !input.exclude.includes(data.type) : true) &&\n      data.domain === input.domain &&\n      data.from === input.from &&\n      data.to === input.to &&\n      (!input.target || event.source === input.target)\n    )\n  }\n\nexport const eventToMessage =\n  <T>(type: T) =>\n  (event: MessageEvent<ProtocolMessage>): {type: T; message: MessageEvent<ProtocolMessage>} => ({\n    type,\n    message: event,\n  })\n\nexport const messageEvents$ = defer(() =>\n  fromEvent<MessageEvent<ProtocolMessage>>(window, 'message'),\n)\n\n/**\n * @public\n */\nexport const createListenLogic = (\n  compatMap?: (event: MessageEvent<ProtocolMessage>) => MessageEvent<ProtocolMessage>,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n) =>\n  fromEventObservable(({input}: {input: ListenInput}) => {\n    return messageEvents$.pipe(\n      compatMap ? map(compatMap) : pipe(),\n      filter(listenFilter(input)),\n      map(eventToMessage(input.responseType)),\n      input.count\n        ? pipe(\n            bufferCount(input.count),\n            concatMap((arr) => arr),\n            take(input.count),\n          )\n        : pipe(),\n    )\n  })\n","import type {MessageType} from './types'\n\n/** @internal */\nexport const DOMAIN = 'sanity/comlink'\n\n/** @internal */\nexport const RESPONSE_TIMEOUT_DEFAULT = 3_000\n\n/** @internal */\nexport const FETCH_TIMEOUT_DEFAULT = 10_000\n\n/** @internal */\nexport const HEARTBEAT_INTERVAL = 1000\n\n/** @internal */\nexport const HANDSHAKE_INTERVAL = 500\n\n/**\n * @public\n */\nexport const MSG_RESPONSE = 'comlink/response'\n\n/**\n * @public\n */\nexport const MSG_HEARTBEAT = 'comlink/heartbeat'\n\n/** @internal */\nexport const MSG_DISCONNECT = 'comlink/disconnect'\n\n/** @internal */\nexport const MSG_HANDSHAKE_SYN = 'comlink/handshake/syn'\n\n/** @internal */\nexport const MSG_HANDSHAKE_SYN_ACK = 'comlink/handshake/syn-ack'\n\n/** @internal */\nexport const MSG_HANDSHAKE_ACK = 'comlink/handshake/ack'\n\n/** @internal */\nexport const HANDSHAKE_MSG_TYPES = [\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HANDSHAKE_ACK,\n] satisfies MessageType[]\n\n/** @internal */\nexport const INTERNAL_MSG_TYPES = [\n  MSG_RESPONSE,\n  MSG_DISCONNECT,\n  MSG_HEARTBEAT,\n  ...HANDSHAKE_MSG_TYPES,\n] satisfies MessageType[]\n","import {EMPTY, filter, fromEvent, map, take, takeUntil, type Observable} from 'rxjs'\nimport {v4 as uuid} from 'uuid'\nimport {\n  assign,\n  fromEventObservable,\n  sendTo,\n  setup,\n  type ActorRefFrom,\n  type AnyActorRef,\n} from 'xstate'\nimport {MSG_RESPONSE, RESPONSE_TIMEOUT_DEFAULT} from './constants'\nimport type {Message, MessageData, MessageType, ProtocolMessage, ResponseMessage} from './types'\n\nconst throwOnEvent =\n  <T>(message?: string) =>\n  (source: Observable<T>) =>\n    source.pipe(\n      take(1),\n      map(() => {\n        throw new Error(message)\n      }),\n    )\n\n/**\n * @public\n */\nexport interface RequestMachineContext<S extends Message> {\n  channelId: string\n  data: MessageData | undefined\n  domain: string\n  expectResponse: boolean\n  from: string\n  id: string\n  parentRef: AnyActorRef\n  resolvable: PromiseWithResolvers<S['response']> | undefined\n  response: S['response'] | null\n  responseTimeout: number | undefined\n  responseTo: string | undefined\n  signal: AbortSignal | undefined\n  suppressWarnings: boolean | undefined\n  sources: Set<MessageEventSource>\n  targetOrigin: string\n  to: string\n  type: MessageType\n}\n\n/**\n * @public\n */\nexport type RequestActorRef<S extends Message> = ActorRefFrom<\n  ReturnType<typeof createRequestMachine<S>>\n>\n\n/**\n * @public\n */\nexport const createRequestMachine = <\n  S extends Message,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => {\n  return setup({\n    types: {} as {\n      children: {\n        'listen for response': 'listen'\n      }\n      context: RequestMachineContext<S>\n      // @todo Should response types be specified?\n      events: {type: 'message'; data: ProtocolMessage<ResponseMessage>} | {type: 'abort'}\n      emitted:\n        | {type: 'request.failed'; requestId: string}\n        | {type: 'request.aborted'; requestId: string}\n        | {\n            type: 'request.success'\n            requestId: string\n            response: MessageData | null\n            responseTo: string | undefined\n          }\n      input: {\n        channelId: string\n        data?: S['data']\n        domain: string\n        expectResponse?: boolean\n        from: string\n        parentRef: AnyActorRef\n        resolvable?: PromiseWithResolvers<S['response']>\n        responseTimeout?: number\n        responseTo?: string\n        signal?: AbortSignal\n        sources: Set<MessageEventSource> | MessageEventSource\n        suppressWarnings?: boolean\n        targetOrigin: string\n        to: string\n        type: S['type']\n      }\n      output: {\n        requestId: string\n        response: S['response'] | null\n        responseTo: string | undefined\n      }\n    },\n    actors: {\n      listen: fromEventObservable(\n        ({\n          input,\n        }: {\n          input: {\n            requestId: string\n            sources: Set<MessageEventSource>\n            signal?: AbortSignal\n          }\n        }) => {\n          const abortSignal$ = input.signal\n            ? fromEvent(input.signal, 'abort').pipe(\n                throwOnEvent(`Request ${input.requestId} aborted`),\n              )\n            : EMPTY\n\n          const messageFilter = (event: MessageEvent<ProtocolMessage<ResponseMessage>>) =>\n            event.data?.type === MSG_RESPONSE &&\n            event.data?.responseTo === input.requestId &&\n            !!event.source &&\n            input.sources.has(event.source)\n\n          return fromEvent<MessageEvent<ProtocolMessage<ResponseMessage>>>(window, 'message').pipe(\n            filter(messageFilter),\n            take(input.sources.size),\n            takeUntil(abortSignal$),\n          )\n        },\n      ),\n    },\n    actions: {\n      'send message': ({context}, params: {message: ProtocolMessage}) => {\n        const {sources, targetOrigin} = context\n        const {message} = params\n\n        sources.forEach((source) => {\n          source.postMessage(message, {targetOrigin})\n        })\n      },\n      'on success': sendTo(\n        ({context}) => context.parentRef,\n        ({context, self}) => {\n          if (context.response) {\n            context.resolvable?.resolve(context.response)\n          }\n          return {\n            type: 'request.success',\n            requestId: self.id,\n            response: context.response,\n            responseTo: context.responseTo,\n          }\n        },\n      ),\n      'on fail': sendTo(\n        ({context}) => context.parentRef,\n        ({context, self}) => {\n          if (!context.suppressWarnings) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `[@sanity/comlink] Received no response to message '${context.type}' on client '${context.from}' (ID: '${context.id}').`,\n            )\n          }\n          context.resolvable?.reject(new Error('No response received'))\n          return {type: 'request.failed', requestId: self.id}\n        },\n      ),\n      'on abort': sendTo(\n        ({context}) => context.parentRef,\n        ({context, self}) => {\n          context.resolvable?.reject(new Error('Request aborted'))\n          return {type: 'request.aborted', requestId: self.id}\n        },\n      ),\n    },\n    guards: {\n      expectsResponse: ({context}) => context.expectResponse,\n    },\n    delays: {\n      initialTimeout: 0,\n      responseTimeout: ({context}) => context.responseTimeout ?? RESPONSE_TIMEOUT_DEFAULT,\n    },\n  }).createMachine({\n    /** @xstate-layout N4IgpgJg5mDOIC5QAoC2BDAxgCwJYDswBKAOlwgBswBiAD1gBd0GwT0AzFgJ2QNwdzoKAFVyowAewCuDItTRY8hUuSoBtAAwBdRKAAOE2P1wT8ukLUQBGAEwBWEgBYAnK+eOAzB7sB2DzY8rABoQAE9rDQc3V0cNTw8fAA4NHwBfVJCFHAJiElgwfAgCKGpNHSQQAyMBU3NLBDsrDxI7DTaAjQA2OOcNDxDwhHsNJx9Ou0TOq2cJxP9HdMyMbOU8gqL8ErUrcv1DY1qK+sbm1vaPLp6+gcRnGydo9wDGycWQLKVc9AB3dGNN6jiWCwdAwMrmKoHMxHRCJRKOEiJHwuZKBZwXKzBMKIGyYkhtAkXOweTqOHw2RJvD45Ug-P4CAH0JgsNicMA8LhwAz4fKicTSWTyZafWm-f5QcEVSE1aGgepwhFIlF9aYYrGDC4+JzEppjGzOUkeGbpDIgfASCBwczU5QQ-YyuqIAC0nRuCBd+IJXu9KSpwppZEoYDt1RMsosiEcNjdVjiJEeGisiSTHkcVgWpptuXyhWKIahjqGzi1BqRJINnVcdkcbuTLS9VYC8ISfsUAbp4vzDphCHJIyjBvJNlxNmRNexQ3sJGH43GPj8jWJrZWuXYfyoEC7YcLsbrgRsjkcvkmdgNbopVhIPhVfnsh8ClMz-tWsCkmEwcHgUvt257u8v+6Hse4xnhOdZnImVidPqCRNB4JqpEAA */\n    context: ({input}) => {\n      return {\n        channelId: input.channelId,\n        data: input.data,\n        domain: input.domain,\n        expectResponse: input.expectResponse ?? false,\n        from: input.from,\n        id: `msg-${uuid()}`,\n        parentRef: input.parentRef,\n        resolvable: input.resolvable,\n        response: null,\n        responseTimeout: input.responseTimeout,\n        responseTo: input.responseTo,\n        signal: input.signal,\n        sources: input.sources instanceof Set ? input.sources : new Set([input.sources]),\n        suppressWarnings: input.suppressWarnings,\n        targetOrigin: input.targetOrigin,\n        to: input.to,\n        type: input.type,\n      }\n    },\n    initial: 'idle',\n    on: {\n      abort: '.aborted',\n    },\n    states: {\n      idle: {\n        after: {\n          initialTimeout: [\n            {\n              target: 'sending',\n            },\n          ],\n        },\n      },\n      sending: {\n        entry: {\n          type: 'send message',\n          params: ({context}) => {\n            const {channelId, data, domain, from, id, responseTo, to, type} = context\n            const message = {\n              channelId,\n              data,\n              domain,\n              from,\n              id,\n              to,\n              type,\n              responseTo,\n            }\n            return {message}\n          },\n        },\n        always: [\n          {\n            guard: 'expectsResponse',\n            target: 'awaiting',\n          },\n          'success',\n        ],\n      },\n      awaiting: {\n        invoke: {\n          id: 'listen for response',\n          src: 'listen',\n          input: ({context}) => ({\n            requestId: context.id,\n            sources: context.sources,\n            signal: context.signal,\n          }),\n          onError: 'aborted',\n        },\n        after: {\n          responseTimeout: 'failed',\n        },\n        on: {\n          message: {\n            actions: assign({\n              response: ({event}) => event.data.data,\n              responseTo: ({event}) => event.data.responseTo,\n            }),\n            target: 'success',\n          },\n        },\n      },\n      failed: {\n        type: 'final',\n        entry: 'on fail',\n      },\n      success: {\n        type: 'final',\n        entry: 'on success',\n      },\n      aborted: {\n        type: 'final',\n        entry: 'on abort',\n      },\n    },\n    output: ({context, self}) => {\n      const output = {\n        requestId: self.id,\n        response: context.response,\n        responseTo: context.responseTo,\n      }\n      return output\n    },\n  })\n}\n\n// export const delayedRequestMachine = requestMachine.provide({\n//   delays: {\n//     initialTimeout: 500,\n//   },\n// })\n","import {v4 as uuid} from 'uuid'\nimport {\n  assertEvent,\n  assign,\n  createActor,\n  enqueueActions,\n  fromCallback,\n  raise,\n  setup,\n  stopChild,\n  type ActorRefFrom,\n  type EventObject,\n} from 'xstate'\nimport {createListenLogic, listenInputFromContext} from './common'\nimport {\n  DOMAIN,\n  HANDSHAKE_INTERVAL,\n  MSG_DISCONNECT,\n  MSG_HANDSHAKE_ACK,\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HEARTBEAT,\n  MSG_RESPONSE,\n} from './constants'\nimport {createRequestMachine, type RequestActorRef} from './request'\nimport type {\n  BufferAddedEmitEvent,\n  BufferFlushedEmitEvent,\n  Message,\n  MessageEmitEvent,\n  ProtocolMessage,\n  RequestData,\n  Status,\n  WithoutResponse,\n} from './types'\n\n/**\n * @public\n */\nexport type ConnectionActorLogic<S extends Message, R extends Message> = ReturnType<\n  typeof createConnectionMachine<S, R>\n>\n/**\n * @public\n */\nexport type ConnectionActor<S extends Message, R extends Message> = ActorRefFrom<\n  ReturnType<typeof createConnectionMachine<S, R>>\n>\n\n/**\n * @public\n */\nexport type Connection<S extends Message = Message, R extends Message = Message> = {\n  actor: ConnectionActor<S, R>\n  connect: () => void\n  disconnect: () => void\n  id: string\n  name: string\n  machine: ReturnType<typeof createConnectionMachine<S, R>>\n  on: <T extends R['type'], U extends Extract<R, {type: T}>>(\n    type: T,\n    handler: (event: U['data']) => Promise<U['response']> | U['response'],\n  ) => () => void\n  onStatus: (handler: (status: Status) => void) => () => void\n  post: <T extends S['type'], U extends Extract<S, {type: T}>>(\n    ...params: (U['data'] extends undefined ? [T] : never) | [T, U['data']]\n  ) => void\n  setTarget: (target: MessageEventSource) => void\n  start: () => () => void\n  stop: () => void\n  target: MessageEventSource | undefined\n}\n\n/**\n * @public\n */\nexport interface ConnectionInput {\n  connectTo: string\n  domain?: string\n  heartbeat?: boolean\n  name: string\n  id?: string\n  target?: MessageEventSource\n  targetOrigin: string\n}\n\nconst sendBackAtInterval = fromCallback<\n  EventObject,\n  {event: EventObject; immediate?: boolean; interval: number}\n>(({sendBack, input}) => {\n  const send = () => {\n    sendBack(input.event)\n  }\n\n  if (input.immediate) {\n    send()\n  }\n\n  const interval = setInterval(send, input.interval)\n\n  return () => {\n    clearInterval(interval)\n  }\n})\n\n/**\n * @public\n */\nexport const createConnectionMachine = <\n  S extends Message, // Sends\n  R extends Message, // Receives\n  V extends WithoutResponse<S> = WithoutResponse<S>,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => {\n  const connectionMachine = setup({\n    types: {} as {\n      children: {\n        'listen for handshake': 'listen'\n        'listen for messages': 'listen'\n        'send heartbeat': 'sendBackAtInterval'\n        'send syn': 'sendBackAtInterval'\n      }\n      context: {\n        buffer: Array<V>\n        channelId: string\n        connectTo: string\n        domain: string\n        heartbeat: boolean\n        id: string\n        name: string\n        requests: Array<RequestActorRef<S>>\n        target: MessageEventSource | undefined\n        targetOrigin: string\n      }\n      emitted:\n        | BufferAddedEmitEvent<V>\n        | BufferFlushedEmitEvent<V>\n        | MessageEmitEvent<R>\n        | (R extends R ? {type: R['type']; message: ProtocolMessage<R>} : never)\n      events:\n        | {type: 'connect'}\n        | {type: 'disconnect'}\n        | {type: 'message.received'; message: MessageEvent<ProtocolMessage<R>>}\n        | {type: 'post'; data: V}\n        | {type: 'response'; respondTo: string; data: Pick<S, 'response'>}\n        | {type: 'request.aborted'; requestId: string}\n        | {type: 'request.failed'; requestId: string}\n        | {\n            type: 'request.success'\n            requestId: string\n            response: S['response'] | null\n            responseTo: string | undefined\n          }\n        | {type: 'request'; data: RequestData<S> | RequestData<S>[]}\n        | {type: 'syn'}\n        | {type: 'target.set'; target: MessageEventSource}\n      input: ConnectionInput\n    },\n    actors: {\n      requestMachine: createRequestMachine<S>(),\n      listen: createListenLogic(),\n      sendBackAtInterval,\n    },\n    actions: {\n      'buffer message': enqueueActions(({enqueue}) => {\n        enqueue.assign({\n          buffer: ({event, context}) => {\n            assertEvent(event, 'post')\n            return [...context.buffer, event.data]\n          },\n        })\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'post')\n          return {\n            type: '_buffer.added',\n            message: event.data,\n          } satisfies BufferAddedEmitEvent<V>\n        })\n      }),\n      'create request': assign({\n        requests: ({context, event, self, spawn}) => {\n          assertEvent(event, 'request')\n          const arr = Array.isArray(event.data) ? event.data : [event.data]\n          const requests = arr.map((request) => {\n            const id = `req-${uuid()}`\n            return spawn('requestMachine', {\n              id,\n              input: {\n                channelId: context.channelId,\n                data: request.data,\n                domain: context.domain,\n                expectResponse: request.expectResponse,\n                from: context.name,\n                parentRef: self,\n                responseTo: request.responseTo,\n                sources: context.target!,\n                targetOrigin: context.targetOrigin,\n                to: context.connectTo,\n                type: request.type,\n              },\n            })\n          })\n          return [...context.requests, ...requests]\n        },\n      }),\n      'emit received message': enqueueActions(({enqueue}) => {\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'message.received')\n          return {\n            type: '_message',\n            message: event.message.data,\n          } satisfies MessageEmitEvent<R>\n        })\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'message.received')\n          const emit = {\n            type: event.message.data.type,\n            message: event.message.data,\n          }\n          return emit\n        })\n      }),\n      'flush buffer': enqueueActions(({enqueue}) => {\n        enqueue.raise(({context}) => ({\n          type: 'request',\n          data: context.buffer.map(({data, type}) => ({data, type})),\n        }))\n        enqueue.emit(({context}) => {\n          return {\n            type: '_buffer.flushed',\n            messages: context.buffer,\n          } satisfies BufferFlushedEmitEvent<V>\n        })\n        enqueue.assign({\n          buffer: [],\n        })\n      }),\n      'post': raise(({event}) => {\n        assertEvent(event, 'post')\n        return {\n          type: 'request' as const,\n          data: {\n            data: event.data.data,\n            expectResponse: true,\n            type: event.data.type,\n          },\n        }\n      }),\n      'remove request': enqueueActions(({context, enqueue, event}) => {\n        assertEvent(event, ['request.success', 'request.failed', 'request.aborted'])\n        stopChild(event.requestId)\n        enqueue.assign({requests: context.requests.filter(({id}) => id !== event.requestId)})\n      }),\n      'respond': raise(({event}) => {\n        assertEvent(event, 'response')\n        return {\n          type: 'request' as const,\n          data: {\n            data: event.data,\n            type: MSG_RESPONSE,\n            responseTo: event.respondTo,\n          },\n        }\n      }),\n      'send handshake ack': raise({\n        type: 'request',\n        data: {type: MSG_HANDSHAKE_ACK},\n      }),\n      'send disconnect': raise(() => {\n        return {\n          type: 'request' as const,\n          data: {type: MSG_DISCONNECT},\n        }\n      }),\n      'send handshake syn': raise({\n        type: 'request',\n        data: {type: MSG_HANDSHAKE_SYN},\n      }),\n      'set target': assign({\n        target: ({event}) => {\n          assertEvent(event, 'target.set')\n          return event.target\n        },\n      }),\n    },\n    guards: {\n      'has target': ({context}) => !!context.target,\n      'should send heartbeats': ({context}) => context.heartbeat,\n    },\n  }).createMachine({\n    /** @xstate-layout N4IgpgJg5mDOIC5QGMAWBDAdpsAbAxAC7oBOMhAdLGIQNoAMAuoqAA4D2sAloV+5ixAAPRAHZRAJgoAWABz0ArHICMy2QGZZCgJwAaEAE9EE+tIrb6ANgkLl46fTuj1AXxf60WHARJgAjgCucJSwAcjIcLAMzEggHNy8-IIiCKLS2hQS6qb2yurisrL6RgjK9LIyCuqq0g7WstZuHhjYePi+gcEUAGboXLiQ0YLxPHwCsSmiCgoykpayDtqS6trqxYjKEk0gnq24FFwQA-jI-DjIdEzDnKNJExuOZpZ12eq29OrSCuupypYUojUaTKCnm5Wk2123gORzA+HilxibBuiXGoBSGnUAIU4gU9FWamUtR+lmUM1EllBEkslMUEnpkJa0JaEFgGAA1lxMFB8LADJghrERqjkhtshk3mTtNo5OpqpYfqCKhTptoqpY1WUtu4dky8BQWWz0Jzue1-EFYIjrgkxqLSupqRRPpoPqJtLI0hIioZENJJE7NnJ8ZYHVk1YyvPrDRyuTyEYLkTa7uixVlMh81KGFhS1j6EPkZlpVjTphr8mkI3sDVhWTHTQBbSLoGAUXwRLgAN0GVyFKNt91KimUFEKXvKC2s9R+6X+jipnzJeSqEJ1UKjNaNJp5EC4sFOrQuCbifeTwg2cgoym0RPxDtqkj0eaB9Ao8zSolMEivZVcq71+33c5CEgeFOCtXskzRM8EDxKRpmkSw3QJbQsmpH5tHmV8JHSbJpDsakV2aSMALOMALhAjoLXAxNbiglI-SxWw1Vw0QNDw0Qfg9KQ7EJSxHHxApK2hQCyOAiAzVgDhMGoI9hX7FMEHSF8cWkelpHURCbBsb481xAEgT9BQJCmWQsiE-URPI8TG1gWBmzAVsyLATtuyRY9ILtWoKmlL82Kqd0tAVJ91LMHFZDKIkVlkNVZHMkiDzE-Adz3UjDx7GiRQHCKnheD53k+HSSkDDIwpBVTqQwuKKEssSDTAUhCAAI3qyg0DIrd8Fkk86MQUMnVM+RynoegTDJH48hGp0vR-FDRqqKqasgOqGua9AQjATAd1NSiul6fpXOtWi7Wy19cslD4vnG7IX3oVjVDUVYEJQqrksW8SdstLqPKy0wKgG1RhtMWogqKhoMjkWp6XxUyFBe3c3tAz70vco6fq+V8PTkGUFzdQqNnELEM2yClrwwzQ4ZShKQJqr7UYU98AS0W9pT4z5pHG0yXwMkNNTyGk3B1TB2AgOBBDXXBDsyhSFG9EovQqN5i1JeRcKqw4Bkl+ToMx8x0j+EaqQ9XMSkBURMgMkEwQWKro2NWNNdPFJAzN0lJGM4slDxhBEJfXyplBd03wW1KxIdnrBxBh4JAyW75C8rJpmDqmIGWkgmpasPjqUcaHooMLHA0uU1UkJOgKW1B6rT1bWor5At0zgcTAkK7hrz1irB0D8cW0UvRPLyv07WqgNq2qAG+l9SnXUz0UOXD5xuMs3Y4+DVJBX7UiKrV6Q8gcfoJO54rFefLLqfJYX1WKYNLxL4NO1NwgA */\n    id: 'connection',\n    context: ({input}) => ({\n      id: input.id || `${input.name}-${uuid()}`,\n      buffer: [],\n      channelId: `chn-${uuid()}`,\n      connectTo: input.connectTo,\n      domain: input.domain ?? DOMAIN,\n      heartbeat: input.heartbeat ?? false,\n      name: input.name,\n      requests: [],\n      target: input.target,\n      targetOrigin: input.targetOrigin,\n    }),\n    on: {\n      'target.set': {\n        actions: 'set target',\n      },\n      'request.success': {\n        actions: 'remove request',\n      },\n      'request.failed': {\n        actions: 'remove request',\n      },\n    },\n    initial: 'idle',\n    states: {\n      idle: {\n        on: {\n          connect: {\n            target: 'handshaking',\n            guard: 'has target',\n          },\n          post: {\n            actions: 'buffer message',\n          },\n        },\n      },\n      handshaking: {\n        id: 'handshaking',\n        invoke: [\n          {\n            id: 'send syn',\n            src: 'sendBackAtInterval',\n            input: () => ({\n              event: {type: 'syn'},\n              interval: HANDSHAKE_INTERVAL,\n              immediate: true,\n            }),\n          },\n          {\n            id: 'listen for handshake',\n            src: 'listen',\n            input: (input) =>\n              listenInputFromContext({\n                include: MSG_HANDSHAKE_SYN_ACK,\n                count: 1,\n              })(input),\n            /* Below would maybe be more readable than transitioning to\n          'connected' on 'message', and 'ack' on exit but having onDone when\n          using passing invocations currently breaks XState Editor */\n            // onDone: {\n            //   target: 'connected',\n            //   actions: 'ack',\n            // },\n          },\n        ],\n        on: {\n          'syn': {\n            actions: 'send handshake syn',\n          },\n          'request': {\n            actions: 'create request',\n          },\n          'post': {\n            actions: 'buffer message',\n          },\n          'message.received': {\n            target: 'connected',\n          },\n          'disconnect': {\n            target: 'disconnected',\n          },\n        },\n        exit: 'send handshake ack',\n      },\n      connected: {\n        entry: 'flush buffer',\n        invoke: {\n          id: 'listen for messages',\n          src: 'listen',\n          input: listenInputFromContext({\n            exclude: [MSG_RESPONSE, MSG_HEARTBEAT],\n          }),\n        },\n        on: {\n          'post': {\n            actions: 'post',\n          },\n          'request': {\n            actions: 'create request',\n          },\n          'response': {\n            actions: 'respond',\n          },\n          'message.received': {\n            actions: 'emit received message',\n          },\n          'disconnect': {\n            target: 'disconnected',\n          },\n        },\n        initial: 'heartbeat',\n        states: {\n          heartbeat: {\n            initial: 'checking',\n            states: {\n              checking: {\n                always: {\n                  guard: 'should send heartbeats',\n                  target: 'sending',\n                },\n              },\n              sending: {\n                on: {\n                  'request.failed': {\n                    target: '#handshaking',\n                  },\n                },\n                invoke: {\n                  id: 'send heartbeat',\n                  src: 'sendBackAtInterval',\n                  input: () => ({\n                    event: {type: 'post', data: {type: MSG_HEARTBEAT, data: undefined}},\n                    interval: 2000,\n                    immediate: false,\n                  }),\n                },\n              },\n            },\n          },\n        },\n      },\n      disconnected: {\n        id: 'disconnected',\n        entry: 'send disconnect',\n        on: {\n          request: {\n            actions: 'create request',\n          },\n          post: {\n            actions: 'buffer message',\n          },\n          connect: {\n            target: 'handshaking',\n            guard: 'has target',\n          },\n        },\n      },\n    },\n  })\n\n  return connectionMachine\n}\n\n/**\n * @public\n */\nexport const createConnection = <S extends Message, R extends Message>(\n  input: ConnectionInput,\n  machine: ConnectionActorLogic<S, R> = createConnectionMachine<S, R>(),\n): Connection<S, R> => {\n  const id = input.id || `${input.name}-${uuid()}`\n  const actor = createActor(machine, {\n    input: {...input, id},\n  })\n\n  const on = <T extends R['type'], U extends Extract<R, {type: T}>>(\n    type: T,\n    handler: (event: U['data']) => Promise<U['response']> | U['response'],\n  ) => {\n    const {unsubscribe} = actor.on(\n      // @ts-expect-error @todo `type` typing\n      type,\n      async (event: {type: T; message: ProtocolMessage<U>}) => {\n        const response = await handler(event.message.data)\n        if (response) {\n          actor.send({type: 'response', respondTo: event.message.id, data: response})\n        }\n      },\n    )\n    return unsubscribe\n  }\n\n  const connect = () => {\n    actor.send({type: 'connect'})\n  }\n\n  const disconnect = () => {\n    actor.send({type: 'disconnect'})\n  }\n\n  const onStatus = (handler: (status: Status) => void) => {\n    const currentSnapshot = actor.getSnapshot()\n    let currentStatus: Status =\n      typeof currentSnapshot.value === 'string'\n        ? currentSnapshot.value\n        : Object.keys(currentSnapshot.value)[0]\n\n    const {unsubscribe} = actor.subscribe((state) => {\n      const status: Status =\n        typeof state.value === 'string' ? state.value : Object.keys(state.value)[0]\n      if (currentStatus !== status) {\n        currentStatus = status\n        handler(status)\n      }\n    })\n    return unsubscribe\n  }\n\n  const setTarget = (target: MessageEventSource) => {\n    actor.send({type: 'target.set', target})\n  }\n\n  const post = <T extends S['type'], U extends Extract<S, {type: T}>>(\n    type: T,\n    data?: U['data'],\n  ) => {\n    const _data = {type, data} as WithoutResponse<U>\n    actor.send({type: 'post', data: _data})\n  }\n\n  const stop = () => {\n    actor.stop()\n  }\n\n  const start = () => {\n    actor.start()\n    return stop\n  }\n\n  return {\n    actor,\n    connect,\n    disconnect,\n    id,\n    name: input.name,\n    machine,\n    on,\n    onStatus,\n    post,\n    setTarget,\n    start,\n    stop,\n    get target() {\n      return actor.getSnapshot().context.target\n    },\n  }\n}\n\n// Helper function to cleanup a connection\nexport const cleanupConnection: (connection: Connection<Message, Message>) => void = (\n  connection,\n) => {\n  connection.disconnect()\n  // Necessary to allow disconnect messages to be sent before the connection\n  // actor is stopped\n  setTimeout(() => {\n    connection.stop()\n  }, 0)\n}\n","import {\n  cleanupConnection,\n  createConnection,\n  createConnectionMachine,\n  type Connection,\n  type ConnectionActorLogic,\n  type ConnectionInput,\n} from './connection'\nimport {type InternalEmitEvent, type Message, type StatusEvent} from './types'\n\n/**\n * @public\n */\nexport type ChannelInput = Omit<ConnectionInput, 'target' | 'targetOrigin'>\n\n/**\n * @public\n */\nexport interface ChannelInstance<S extends Message, R extends Message> {\n  on: <T extends R['type'], U extends Extract<R, {type: T}>>(\n    type: T,\n    handler: (event: U['data']) => Promise<U['response']> | U['response'],\n  ) => () => void\n  onInternalEvent: <\n    T extends InternalEmitEvent<S, R>['type'],\n    U extends Extract<InternalEmitEvent<S, R>, {type: T}>,\n  >(\n    type: T,\n    handler: (event: U) => void,\n  ) => () => void\n  onStatus: (handler: (event: StatusEvent) => void) => void\n  post: <T extends S['type'], U extends Extract<S, {type: T}>>(\n    ...params: (U['data'] extends undefined ? [T] : never) | [T, U['data']]\n  ) => void\n  start: () => () => void\n  stop: () => void\n}\n\n/**\n * @public\n */\nexport interface Controller {\n  addTarget: (target: MessageEventSource) => () => void\n  createChannel: <S extends Message, R extends Message>(\n    input: ChannelInput,\n    machine?: ConnectionActorLogic<S, R>,\n  ) => ChannelInstance<S, R>\n  destroy: () => void\n}\n\ninterface Channel<\n  S extends Message = Message,\n  R extends Message = Message,\n  T extends InternalEmitEvent<S, R>['type'] = InternalEmitEvent<S, R>['type'],\n> {\n  input: ChannelInput\n  connections: Set<Connection<S, R>>\n  internalEventSubscribers: Set<{\n    type: T\n    handler: (event: Extract<InternalEmitEvent<S, R>, {type: T}>) => void\n    unsubscribers: Array<() => void>\n  }>\n  machine: ConnectionActorLogic<S, R>\n  statusSubscribers: Set<{\n    handler: (event: StatusEvent) => void\n    unsubscribers: Array<() => void>\n  }>\n  subscribers: Set<{\n    type: R['type']\n    handler: (event: R['data']) => Promise<R['response']> | R['response']\n    unsubscribers: Array<() => void>\n  }>\n}\n\nconst noop = () => {}\n\n/**\n * @public\n */\nexport const createController = (input: {targetOrigin: string}): Controller => {\n  const {targetOrigin} = input\n  const targets = new Set<MessageEventSource>()\n  const channels = new Set<Channel>()\n\n  const addTarget = (target: MessageEventSource) => {\n    // If the target has already been added, return just a noop cleanup\n    if (targets.has(target)) {\n      return noop\n    }\n\n    if (!targets.size || !channels.size) {\n      targets.add(target)\n\n      // If there are existing channels, set the target on all existing\n      // connections, and trigger a connection event\n      channels.forEach((channel) => {\n        channel.connections.forEach((connection) => {\n          connection.setTarget(target)\n          connection.connect()\n        })\n      })\n      // We perform a 'soft' cleanup here: disconnect only as we want to\n      // maintain at least one live connection per channel\n      return () => {\n        targets.delete(target)\n        channels.forEach((channel) => {\n          channel.connections.forEach((connection) => {\n            if (connection.target === target) {\n              connection.disconnect()\n            }\n          })\n        })\n      }\n    }\n\n    targets.add(target)\n\n    // Maintain a list of connections to cleanup\n    const targetConnections = new Set<Connection<Message, Message>>()\n\n    // If we already have targets and channels, we need to create new\n    // connections for each source with all the associated subscribers.\n    channels.forEach((channel) => {\n      const connection = createConnection(\n        {\n          ...channel.input,\n          target,\n          targetOrigin,\n        },\n        channel.machine,\n      )\n\n      targetConnections.add(connection)\n      channel.connections.add(connection)\n\n      channel.subscribers.forEach(({type, handler, unsubscribers}) => {\n        unsubscribers.push(connection.on(type, handler))\n      })\n      channel.internalEventSubscribers.forEach(({type, handler, unsubscribers}) => {\n        // @ts-expect-error @todo\n        unsubscribers.push(connection.actor.on(type, handler).unsubscribe)\n      })\n      channel.statusSubscribers.forEach(({handler, unsubscribers}) => {\n        unsubscribers.push(\n          connection.onStatus((status) => handler({connection: connection.id, status})),\n        )\n      })\n\n      connection.start()\n      connection.connect()\n    })\n\n    // We perform a more 'aggressive' cleanup here as we do not need to maintain\n    // these 'duplicate' connections: disconnect, stop, and remove the connections from\n    // all channels\n    return () => {\n      targets.delete(target)\n      targetConnections.forEach((connection) => {\n        cleanupConnection(connection)\n        channels.forEach((channel) => {\n          channel.connections.delete(connection)\n        })\n      })\n    }\n  }\n\n  const createChannel = <S extends Message, R extends Message>(\n    input: ChannelInput,\n    machine: ConnectionActorLogic<S, R> = createConnectionMachine<S, R>(),\n  ): ChannelInstance<S, R> => {\n    const channel: Channel<S, R> = {\n      connections: new Set(),\n      input,\n      internalEventSubscribers: new Set(),\n      machine,\n      statusSubscribers: new Set(),\n      subscribers: new Set(),\n    }\n\n    channels.add(channel as unknown as Channel)\n\n    const {connections, internalEventSubscribers, statusSubscribers, subscribers} = channel\n\n    if (targets.size) {\n      // If targets have already been added, create a connection for each target\n      targets.forEach((target) => {\n        const connection = createConnection<S, R>(\n          {\n            ...input,\n            target,\n            targetOrigin,\n          },\n          machine,\n        )\n        connections.add(connection)\n      })\n    } else {\n      // If targets have not been added yet, create a connection without a target\n      const connection = createConnection<S, R>({...input, targetOrigin}, machine)\n      connections.add(connection)\n    }\n\n    const post: ChannelInstance<S, R>['post'] = (...params) => {\n      const [type, data] = params\n      connections.forEach((connection) => {\n        connection.post(type, data)\n      })\n    }\n\n    const on: ChannelInstance<S, R>['on'] = (type, handler) => {\n      const unsubscribers: Array<() => void> = []\n      connections.forEach((connection) => {\n        unsubscribers.push(connection.on(type, handler))\n      })\n      const subscriber = {type, handler, unsubscribers}\n      subscribers.add(subscriber)\n      return () => {\n        unsubscribers.forEach((unsub) => unsub())\n        subscribers.delete(subscriber)\n      }\n    }\n\n    const onInternalEvent = <\n      T extends InternalEmitEvent<S, R>['type'],\n      U extends Extract<InternalEmitEvent<S, R>, {type: T}>,\n    >(\n      type: T,\n      handler: (event: U) => void,\n    ) => {\n      const unsubscribers: Array<() => void> = []\n      connections.forEach((connection) => {\n        // @ts-expect-error @todo @help\n        unsubscribers.push(connection.actor.on(type, handler).unsubscribe)\n      })\n      const subscriber = {type, handler, unsubscribers}\n      // @ts-expect-error @todo @help\n      internalEventSubscribers.add(subscriber)\n      return () => {\n        unsubscribers.forEach((unsub) => unsub())\n        // @ts-expect-error @todo @help\n        internalEventSubscribers.delete(subscriber)\n      }\n    }\n\n    const onStatus = (handler: (event: StatusEvent) => void) => {\n      const unsubscribers: Array<() => void> = []\n      connections.forEach((connection) => {\n        unsubscribers.push(\n          connection.onStatus((status) => handler({connection: connection.id, status})),\n        )\n      })\n      const subscriber = {handler, unsubscribers}\n      statusSubscribers.add(subscriber)\n      return () => {\n        unsubscribers.forEach((unsub) => unsub())\n        statusSubscribers.delete(subscriber)\n      }\n    }\n\n    // Stop a connection, cleanup all connections and remove the connection itself\n    // from the controller\n    // @todo Remove casting\n    const stop = () => {\n      const connections = channel.connections as unknown as Set<Connection>\n      connections.forEach(cleanupConnection)\n      connections.clear()\n      channels.delete(channel as unknown as Channel)\n    }\n\n    const start = () => {\n      connections.forEach((connection) => {\n        connection.start()\n        connection.connect()\n      })\n\n      return stop\n    }\n\n    return {\n      on,\n      onInternalEvent,\n      onStatus,\n      post,\n      start,\n      stop,\n    }\n  }\n\n  // Destroy the controller, cleanup all connections in all channels\n  const destroy = () => {\n    channels.forEach(({connections}) => {\n      connections.forEach(cleanupConnection)\n      connections.clear()\n    })\n    channels.clear()\n    targets.clear()\n  }\n\n  return {\n    addTarget,\n    createChannel,\n    destroy,\n  }\n}\n","import {v4 as uuid} from 'uuid'\nimport {\n  assertEvent,\n  assign,\n  createActor,\n  emit,\n  enqueueActions,\n  raise,\n  setup,\n  stopChild,\n  type ActorRefFrom,\n} from 'xstate'\nimport {createListenLogic, listenInputFromContext} from './common'\nimport {\n  DOMAIN,\n  FETCH_TIMEOUT_DEFAULT,\n  MSG_DISCONNECT,\n  MSG_HANDSHAKE_ACK,\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HEARTBEAT,\n  MSG_RESPONSE,\n} from './constants'\nimport {createRequestMachine, type RequestActorRef} from './request'\nimport type {\n  BufferAddedEmitEvent,\n  BufferFlushedEmitEvent,\n  HeartbeatEmitEvent,\n  HeartbeatMessage,\n  Message,\n  MessageEmitEvent,\n  ProtocolMessage,\n  RequestData,\n  Status,\n  WithoutResponse,\n} from './types'\n\n/**\n * @public\n */\nexport interface NodeInput {\n  name: string\n  connectTo: string\n  domain?: string\n}\n\n/**\n * @public\n */\nexport type NodeActorLogic<S extends Message, R extends Message> = ReturnType<\n  typeof createNodeMachine<S, R>\n>\n\n/**\n * @public\n */\nexport type NodeActor<S extends Message, R extends Message> = ActorRefFrom<NodeActorLogic<S, R>>\n\n/**\n * @public\n */\nexport type Node<S extends Message, R extends Message> = {\n  actor: NodeActor<S, R>\n  fetch: <T extends S['type'], U extends Extract<S, {type: T}>>(\n    ...params:\n      | (U['data'] extends undefined ? [T] : never)\n      | [T, U['data']]\n      | [T, U['data'], {signal?: AbortSignal; suppressWarnings?: boolean}]\n  ) => S extends U ? (S['type'] extends T ? Promise<S['response']> : never) : never\n  machine: NodeActorLogic<S, R>\n  on: <T extends R['type'], U extends Extract<R, {type: T}>>(\n    type: T,\n    handler: (event: U['data']) => U['response'],\n  ) => () => void\n  onStatus: (handler: (status: Status) => void) => () => void\n  post: <T extends S['type'], U extends Extract<S, {type: T}>>(\n    ...params: (U['data'] extends undefined ? [T] : never) | [T, U['data']]\n  ) => void\n  start: () => () => void\n  stop: () => void\n}\n\n/**\n * @public\n */\nexport const createNodeMachine = <\n  S extends Message, // Sends\n  R extends Message, // Receives\n  V extends WithoutResponse<S> = WithoutResponse<S>,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => {\n  const nodeMachine = setup({\n    types: {} as {\n      children: {\n        'listen for disconnect': 'listen'\n        'listen for handshake ack': 'listen'\n        'listen for handshake syn': 'listen'\n        'listen for heartbeat': 'listen'\n        'listen for messages': 'listen'\n      }\n      context: {\n        buffer: Array<{\n          data: V\n          resolvable?: PromiseWithResolvers<S['response']>\n          options?: {\n            signal?: AbortSignal\n            suppressWarnings?: boolean\n          }\n        }>\n        channelId: string | null\n        connectTo: string\n        domain: string\n        // The handshake buffer is a workaround to maintain backwards\n        // compatibility with the Sanity channels package, which may incorrectly\n        // send buffered messages _before_ it completes the handshake (i.e.\n        // sends an ack message). It should be removed in the next major.\n        handshakeBuffer: Array<{\n          type: 'message.received'\n          message: MessageEvent<ProtocolMessage<R>>\n        }>\n        name: string\n        requests: Array<RequestActorRef<S>>\n        target: MessageEventSource | undefined\n        targetOrigin: string | null\n      }\n      emitted:\n        | BufferAddedEmitEvent<V>\n        | BufferFlushedEmitEvent<V>\n        | HeartbeatEmitEvent\n        | MessageEmitEvent<R>\n        | (R extends R ? {type: R['type']; message: ProtocolMessage<R>} : never)\n      events:\n        | {type: 'heartbeat.received'; message: MessageEvent<ProtocolMessage<HeartbeatMessage>>}\n        | {type: 'message.received'; message: MessageEvent<ProtocolMessage<R>>}\n        | {type: 'handshake.syn'; message: MessageEvent<ProtocolMessage<R>>}\n        | {\n            type: 'post'\n            data: V\n            resolvable?: PromiseWithResolvers<S['response']>\n            options?: {\n              responseTimeout?: number\n              signal?: AbortSignal\n              suppressWarnings?: boolean\n            }\n          }\n        | {type: 'request.aborted'; requestId: string}\n        | {type: 'request.failed'; requestId: string}\n        | {\n            type: 'request.success'\n            requestId: string\n            response: S['response'] | null\n            responseTo: string | undefined\n          }\n        | {type: 'request'; data: RequestData<S> | RequestData<S>[]} // @todo align with 'post' type\n      input: NodeInput\n    },\n    actors: {\n      requestMachine: createRequestMachine<S>(),\n      listen: createListenLogic(),\n    },\n    actions: {\n      'buffer incoming message': assign({\n        handshakeBuffer: ({event, context}) => {\n          assertEvent(event, 'message.received')\n          return [...context.handshakeBuffer, event]\n        },\n      }),\n      'buffer message': enqueueActions(({enqueue}) => {\n        enqueue.assign({\n          buffer: ({event, context}) => {\n            assertEvent(event, 'post')\n            return [\n              ...context.buffer,\n              {\n                data: event.data,\n                resolvable: event.resolvable,\n                options: event.options,\n              },\n            ]\n          },\n        })\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'post')\n          return {\n            type: '_buffer.added',\n            message: event.data,\n          } satisfies BufferAddedEmitEvent<V>\n        })\n      }),\n      'create request': assign({\n        requests: ({context, event, self, spawn}) => {\n          assertEvent(event, 'request')\n          const arr = Array.isArray(event.data) ? event.data : [event.data]\n          const requests = arr.map((request) => {\n            const id = `req-${uuid()}`\n            return spawn('requestMachine', {\n              id,\n              input: {\n                channelId: context.channelId!,\n                data: request.data,\n                domain: context.domain!,\n                expectResponse: request.expectResponse,\n                from: context.name,\n                parentRef: self,\n                resolvable: request.resolvable,\n                responseTimeout: request.options?.responseTimeout,\n                responseTo: request.responseTo,\n                signal: request.options?.signal,\n                sources: context.target!,\n                suppressWarnings: request.options?.suppressWarnings,\n                targetOrigin: context.targetOrigin!,\n                to: context.connectTo,\n                type: request.type,\n              },\n            })\n          })\n          return [...context.requests, ...requests]\n        },\n      }),\n      'emit heartbeat': emit(() => {\n        return {\n          type: '_heartbeat',\n        } satisfies HeartbeatEmitEvent\n      }),\n      'emit received message': enqueueActions(({enqueue}) => {\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'message.received')\n          return {\n            type: '_message',\n            message: event.message.data,\n          } satisfies MessageEmitEvent<R>\n        })\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'message.received')\n          const emit = {\n            type: event.message.data.type,\n            message: event.message.data,\n          }\n          return emit\n        })\n      }),\n      'flush buffer': enqueueActions(({enqueue}) => {\n        enqueue.raise(({context}) => ({\n          type: 'request',\n          data: context.buffer.map(({data, resolvable, options}) => ({\n            data: data.data,\n            type: data.type,\n            expectResponse: resolvable ? true : false,\n            resolvable,\n            options,\n          })),\n        }))\n        enqueue.emit(({context}) => {\n          return {\n            type: '_buffer.flushed',\n            messages: context.buffer.map(({data}) => data),\n          } satisfies BufferFlushedEmitEvent<V>\n        })\n        enqueue.assign({\n          buffer: [],\n        })\n      }),\n      'flush handshake buffer': enqueueActions(({context, enqueue}) => {\n        context.handshakeBuffer.forEach((event) => enqueue.raise(event))\n        enqueue.assign({\n          handshakeBuffer: [],\n        })\n      }),\n      'post': raise(({event}) => {\n        assertEvent(event, 'post')\n        return {\n          type: 'request' as const,\n          data: {\n            data: event.data.data,\n            expectResponse: event.resolvable ? true : false,\n            type: event.data.type,\n            resolvable: event.resolvable,\n            options: event.options,\n          },\n        }\n      }),\n      'remove request': enqueueActions(({context, enqueue, event}) => {\n        assertEvent(event, ['request.success', 'request.failed', 'request.aborted'])\n        stopChild(event.requestId)\n        enqueue.assign({requests: context.requests.filter(({id}) => id !== event.requestId)})\n      }),\n      'send response': raise(({event}) => {\n        assertEvent(event, ['message.received', 'heartbeat.received'])\n        return {\n          type: 'request' as const,\n          data: {\n            type: MSG_RESPONSE,\n            responseTo: event.message.data.id,\n            data: undefined,\n          },\n        }\n      }),\n      'send handshake syn ack': raise({\n        type: 'request',\n        data: {type: MSG_HANDSHAKE_SYN_ACK},\n      }),\n      'set connection config': assign({\n        channelId: ({event}) => {\n          assertEvent(event, 'handshake.syn')\n          return event.message.data.channelId\n        },\n        target: ({event}) => {\n          assertEvent(event, 'handshake.syn')\n          return event.message.source || undefined\n        },\n        targetOrigin: ({event}) => {\n          assertEvent(event, 'handshake.syn')\n          return event.message.origin\n        },\n      }),\n    },\n    guards: {\n      hasSource: ({context}) => context.target !== null,\n    },\n  }).createMachine({\n    /** @xstate-layout N4IgpgJg5mDOIC5QDsD2EwGIBOYCOArnAC4B0sBAxpXLANoAMAuoqAA6qwCWxXqyrEAA9EAVgYAWUgEYJDUQA4JAZmUSJC0coDsAGhABPRNIYLSErdOkBOAGzbx227YUBfV-rQYc+IrDIAZgCGXAA2kIwsSCAc3Lz8giIIoiakqgBMDKbp2tYS0srp+kYI0ununuhgpFwQ4ZgQ-NVcyABuqADW1V7NdWAILe2UQfHIkZGCsTx8AtFJ6aKipAzWOtrpC7Z5BUWGiNoK6aS26RLW2tLaqkqqFSA9NX2YALa0QTCkuDRcrRHMk5xpgk5ogJLZSNZIVDoVCFLZiohbIVSLkXLZRHZDgxbHcHrV6rFiBNolNRolEVJbCsdGUzsoyhiEcllOC1DowelVmVrOUPPcqqQABZBZAQWDCjotKANJo1NqdboC4Wi8VBSXIKADeXDUbjf4kwFkkEILbg8RZMHKOzWKzKJkHJa086Xa4qZS4pUisUSqU+QgkYnsQ0zcnJaRLDbpZwKNQSBYspm2MEyC5KTnaDSSd18h7K71q32EwMxYPA0BJFLKY5yZxIrKSURM0RnFHSBTrQqQ9babQejBCr2q9XSiBcWCUfjIMCUIn6oNxEPGtTWFFR0RUy7iGzt+3Ip0XURXVZKPvVCfIKczyB+vyzqLzoGzcuIG0MGTyCztjRtjaJjbHVMNAUTdu1PUhz0vYhryLOcSwXMthBfK0ZGsLQGBZekCi0Jso1IdI23WG04zOE4wIg6coIgBox3Imdi1JRdnxNOxSHNSQkWtW0mTjMxMQ7fDzgcbNKn7WjKJeN4Pi+MAfj+e84MfUMFHbZZwxOHZNDyO09gQOQjmAhZJCM9IMjIycKOvQUwCCbBiAAI2sshpNkiB6NLJ9EIQBQbWOdJlMhYCUjbJkchXGsFmsJQMVsWl3BzKp4GiHoAXgjykgAWmkZZ6xy3LZF2EobCy6xsQWJQ42kE4FjA-EwBSxTjSRUhDgqkzgO2BxdykU4AvXFQ-KjMC8yHKV6qNJi6WOdcypcZsXGxe0JG0XySKjM5lKsMyLwsiAxsYzylDfONznUEqrmi+1ThkHqXDONbULi1wgA */\n    id: 'node',\n    context: ({input}) => ({\n      buffer: [],\n      channelId: null,\n      connectTo: input.connectTo,\n      domain: input.domain ?? DOMAIN,\n      handshakeBuffer: [],\n      name: input.name,\n      requests: [],\n      target: undefined,\n      targetOrigin: null,\n    }),\n    // Always listen for handshake syn messages. The channel could have\n    // disconnected without being able to notify the node, and so need to\n    // re-establish the connection.\n    invoke: {\n      id: 'listen for handshake syn',\n      src: 'listen',\n      input: listenInputFromContext({\n        include: MSG_HANDSHAKE_SYN,\n        responseType: 'handshake.syn',\n      }),\n    },\n    on: {\n      'request.success': {\n        actions: 'remove request',\n      },\n      'request.failed': {\n        actions: 'remove request',\n      },\n      'request.aborted': {\n        actions: 'remove request',\n      },\n      'handshake.syn': {\n        actions: 'set connection config',\n        target: '.handshaking',\n      },\n    },\n    initial: 'idle',\n    states: {\n      idle: {\n        on: {\n          post: {\n            actions: 'buffer message',\n          },\n        },\n      },\n      handshaking: {\n        guard: 'hasSource',\n        entry: 'send handshake syn ack',\n        invoke: [\n          {\n            id: 'listen for handshake ack',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_HANDSHAKE_ACK,\n              count: 1,\n              // Override the default `message.received` responseType to prevent\n              // buffering the ack message. We transition to the connected state\n              // using onDone instead of listening to this event using `on`\n              responseType: 'handshake.complete',\n            }),\n            onDone: 'connected',\n          },\n          {\n            id: 'listen for disconnect',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_DISCONNECT,\n              count: 1,\n              responseType: 'disconnect',\n            }),\n          },\n          {\n            id: 'listen for messages',\n            src: 'listen',\n            input: listenInputFromContext({\n              exclude: [\n                MSG_DISCONNECT,\n                MSG_HANDSHAKE_SYN,\n                MSG_HANDSHAKE_ACK,\n                MSG_HEARTBEAT,\n                MSG_RESPONSE,\n              ],\n            }),\n          },\n        ],\n        on: {\n          'request': {\n            actions: 'create request',\n          },\n          'post': {\n            actions: 'buffer message',\n          },\n          'message.received': {\n            actions: 'buffer incoming message',\n          },\n          'disconnect': {\n            target: 'idle',\n          },\n        },\n      },\n      connected: {\n        entry: ['flush handshake buffer', 'flush buffer'],\n        invoke: [\n          {\n            id: 'listen for messages',\n            src: 'listen',\n            input: listenInputFromContext({\n              exclude: [\n                MSG_DISCONNECT,\n                MSG_HANDSHAKE_SYN,\n                MSG_HANDSHAKE_ACK,\n                MSG_HEARTBEAT,\n                MSG_RESPONSE,\n              ],\n            }),\n          },\n          {\n            id: 'listen for heartbeat',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_HEARTBEAT,\n              responseType: 'heartbeat.received',\n            }),\n          },\n          {\n            id: 'listen for disconnect',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_DISCONNECT,\n              count: 1,\n              responseType: 'disconnect',\n            }),\n          },\n        ],\n        on: {\n          'request': {\n            actions: 'create request',\n          },\n          'post': {\n            actions: 'post',\n          },\n          'disconnect': {\n            target: 'idle',\n          },\n          'message.received': {\n            actions: ['send response', 'emit received message'],\n          },\n          'heartbeat.received': {\n            actions: ['send response', 'emit heartbeat'],\n          },\n        },\n      },\n    },\n  })\n  return nodeMachine\n}\n\n/**\n * @public\n */\nexport const createNode = <S extends Message, R extends Message>(\n  input: NodeInput,\n  machine: NodeActorLogic<S, R> = createNodeMachine<S, R>(),\n): Node<S, R> => {\n  const actor = createActor(machine, {\n    input,\n  })\n\n  const on = <T extends R['type'], U extends Extract<R, {type: T}>>(\n    type: T,\n    handler: (event: U['data']) => U['response'],\n  ) => {\n    const {unsubscribe} = actor.on(\n      // @ts-expect-error @todo `type` typing\n      type,\n      (event: {type: T; message: ProtocolMessage<U>}) => {\n        handler(event.message.data)\n      },\n    )\n    return unsubscribe\n  }\n\n  const onStatus = (handler: (status: Status) => void) => {\n    const snapshot = actor.getSnapshot()\n    let currentStatus: Status =\n      typeof snapshot.value === 'string' ? snapshot.value : Object.keys(snapshot.value)[0]\n\n    const {unsubscribe} = actor.subscribe((state) => {\n      const status: Status =\n        typeof state.value === 'string' ? state.value : Object.keys(state.value)[0]\n      if (currentStatus !== status) {\n        currentStatus = status\n        handler(status)\n      }\n    })\n    return unsubscribe\n  }\n\n  const post = <T extends S['type'], U extends Extract<S, {type: T}>>(\n    type: T,\n    data?: U['data'],\n  ) => {\n    const _data = {type, data} as WithoutResponse<U>\n    actor.send({type: 'post', data: _data})\n  }\n\n  const fetch = <T extends S['type'], U extends Extract<S, {type: T}>>(\n    type: T,\n    data?: U['data'],\n    options?: {\n      responseTimeout?: number\n      signal?: AbortSignal\n      suppressWarnings?: boolean\n    },\n  ) => {\n    const {responseTimeout = FETCH_TIMEOUT_DEFAULT, signal, suppressWarnings} = options || {}\n\n    const resolvable = Promise.withResolvers<S['response']>()\n    const _data = {type, data} as WithoutResponse<U>\n\n    actor.send({\n      type: 'post',\n      data: _data,\n      resolvable,\n      options: {responseTimeout, signal, suppressWarnings},\n    })\n    return resolvable.promise as never\n  }\n\n  const stop = () => {\n    actor.stop()\n  }\n\n  const start = () => {\n    actor.start()\n    return stop\n  }\n\n  return {\n    actor,\n    fetch,\n    machine,\n    on,\n    onStatus,\n    post,\n    start,\n    stop,\n  }\n}\n"],"names":["uuid","input","connections"],"mappings":"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","ignoreList":[0,1,2,3,4,5]}},
    {"offset": {"line": 2202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2218, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/presentation/node_modules/%40emotion/memoize/dist/memoize.browser.esm.js"],"sourcesContent":["function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n"],"names":[],"mappings":";;;AAAA,SAAS,QAAQ,EAAE;IACjB,IAAI,QAAQ,CAAC;IACb,OAAO,SAAU,GAAG;QAClB,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,KAAK,CAAC,IAAI,GAAG,GAAG;QAC9C,OAAO,KAAK,CAAC,IAAI;IACnB;AACF;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 2229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2235, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/presentation/node_modules/%40emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js"],"sourcesContent":["import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport default index;\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,kBAAkB,65HAA65H,qDAAqD;AAEx+H,IAAI,QAAQ,CAAA,GAAA,wNAAA,CAAA,UAAO,AAAD,EAAE,SAAU,IAAI;IAChC,OAAO,gBAAgB,IAAI,CAAC,SAAS,KAAK,UAAU,CAAC,OAAO,OAEzD,KAAK,UAAU,CAAC,OAAO,OAEvB,KAAK,UAAU,CAAC,KAAK;AAC1B;uCAIe","ignoreList":[0]}},
    {"offset": {"line": 2245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2251, "column": 0}, "map": {"version":3,"file":"constants.js","sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/preview-url-secret/src/constants.ts"],"sourcesContent":["import type {\n  PreviewUrlSecretSchemaIdPrefix,\n  PreviewUrlSecretSchemaType,\n  PreviewUrlSecretSchemaTypeSingleton,\n} from './types'\n\n/** @internal */\nexport const schemaType = 'sanity.previewUrlSecret' satisfies PreviewUrlSecretSchemaType\n\n/** @internal */\nexport const schemaIdPrefix = 'sanity-preview-url-secret' satisfies PreviewUrlSecretSchemaIdPrefix\n\n/** @internal */\nexport const schemaIdSingleton = `${schemaIdPrefix}.share-access` as const\n\n/** @internal */\nexport const schemaTypeSingleton =\n  'sanity.previewUrlShareAccess' satisfies PreviewUrlSecretSchemaTypeSingleton\n\n/** @internal */\nexport const apiVersion = '2023-11-09'\n\n/** @internal */\nexport const urlSearchParamPreviewSecret = 'sanity-preview-secret'\n\n/** @internal */\nexport const urlSearchParamPreviewPathname = 'sanity-preview-pathname'\n\n/** @internal */\nexport const urlSearchParamPreviewPerspective = 'sanity-preview-perspective'\n\n/** @internal */\nexport const isDev = process.env.NODE_ENV === 'development'\n\n/**\n * updated within the hour, if it's older it'll create a new secret or return null\n * @internal\n */\nexport const SECRET_TTL = 60 * 60\n\n/** @internal */\nexport const fetchSecretQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && secret == $secret && dateTime(_updatedAt) > dateTime(now()) - ${SECRET_TTL}][0]{\n    _id,\n    _updatedAt,\n    secret,\n    studioUrl,\n  }` as const\n\n/** @internal */\nexport const fetchSharedAccessQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\"][0].secret` as const\n\n/** @internal */\nexport const fetchSharedAccessSecretQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\" && secret == $secret][0]{\n  secret,\n  studioUrl,\n}` as const\n\n/** @internal */\nexport const deleteExpiredSecretsQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && dateTime(_updatedAt) <= dateTime(now()) - ${SECRET_TTL}]` as const\n\n/**\n * Used for tagging `client.fetch` queries\n * @internal\n */\nexport const tag = 'sanity.preview-url-secret' as const\n\n/** @internal */\nexport const perspectiveCookieName = 'sanity-preview-perspective'\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAgCqB,QAAQ,IAAI;AAzBpB,MAAA,aAAa,2BAGb,iBAAiB,6BAGjB,oBAAoB,GAAG,cAAc,CAAA,aAAA,CAAA,EAGrC,sBACX,gCAGW,aAAa,cAGb,8BAA8B,yBAG9B,gCAAgC,2BAGhC,mCAAmC,8BAGnC,4DAAiC,eAMjC,aAAa,KAAK,IAGlB,mBAAA,QAAA,GACA,CAAA,YAAA,EAAe,UAAU,CAAA,mEAAA,EAAsE,UAAU,CAAA;;;;;GAAA,CAAA,EAQzG,yBAAA,QAAA,GACA,CAAA,UAAA,EAAa,iBAAiB,CAAA,eAAA,EAAkB,mBAAmB,CAAA,YAAA,CAAA,EAGnE,+BAAA,QAAA,GACA,CAAA,UAAA,EAAa,iBAAiB,CAAA,eAAA,EAAkB,mBAAmB,CAAA;;;CAAA,CAAA,EAMnE,4BAAA,QAAA,GACA,CAAA,YAAA,EAAe,UAAU,CAAA,+CAAA,EAAkD,UAAU,CAAA,CAAA,CAAA,EAMrF,MAAM,6BAGN,wBAAwB","ignoreList":[0]}},
    {"offset": {"line": 2281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2287, "column": 0}, "map": {"version":3,"file":"without-secret-search-params.js","sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/preview-url-secret/src/withoutSecretSearchParams.ts"],"sourcesContent":["import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from './constants'\n\n/** @alpha */\nexport function withoutSecretSearchParams(url: URL): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  searchParams.delete(urlSearchParamPreviewPathname)\n  searchParams.delete(urlSearchParamPreviewSecret)\n  searchParams.delete(urlSearchParamPreviewPerspective)\n  return newUrl\n}\n\n/** @alpha */\nexport function hasSecretSearchParams(url: URL): boolean {\n  return url.searchParams.has(urlSearchParamPreviewSecret)\n}\n\n/** @alpha */\nexport function setSecretSearchParams(\n  url: URL,\n  secret: string,\n  redirectTo: string,\n  perspective: string,\n): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  searchParams.set(urlSearchParamPreviewSecret, secret)\n  searchParams.set(urlSearchParamPreviewPathname, redirectTo)\n  searchParams.set(urlSearchParamPreviewPerspective, perspective)\n  return newUrl\n}\n"],"names":[],"mappings":";;;;;;;AAOO,SAAS,0BAA0B,GAAA,EAAe;IACvD,MAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,YAAA,EAAA,GAAgB;IACV,OAAA,aAAA,MAAA,8KAAO,gCAA6B,GACjD,aAAa,MAAA,8KAAO,8BAA2B,GAC/C,aAAa,MAAA,8KAAO,mCAAgC,GAC7C;AACT;AAGO,SAAS,sBAAsB,GAAA,EAAmB;IAChD,OAAA,IAAI,YAAA,CAAa,GAAA,8KAAI,8BAA2B;AACzD;AAGO,SAAS,sBACd,GAAA,EACA,MAAA,EACA,UAAA,EACA,WAAA,EACK;IACL,MAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,YAAA,EAAA,GAAgB;IACvB,OAAA,aAAa,GAAA,8KAAI,8BAAA,EAA6B,MAAM,GACpD,aAAa,GAAA,8KAAI,gCAAA,EAA+B,UAAU,GAC1D,aAAa,GAAA,8KAAI,mCAAA,EAAkC,WAAW,GACvD;AACT","ignoreList":[0]}},
    {"offset": {"line": 2307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2313, "column": 0}, "map": {"version":3,"file":"generateSecret.js","sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/preview-url-secret/src/generateSecret.ts"],"sourcesContent":["/** @internal */\nexport function generateUrlSecret(): string {\n  // Try using WebCrypto if available\n  if (typeof crypto !== 'undefined') {\n    // Generate a random array of 16 bytes\n    const array = new Uint8Array(16)\n    crypto.getRandomValues(array)\n\n    // Convert the array to a URL-safe string\n    let key = ''\n    for (let i = 0; i < array.length; i++) {\n      // Convert each byte to a 2-digit hexadecimal number\n      key += array[i].toString(16).padStart(2, '0')\n    }\n\n    // Replace '+' and '/' from base64url to '-' and '_'\n    key = btoa(key).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/[=]+$/, '')\n\n    return key\n  }\n  // If not fallback to Math.random\n  return Math.random().toString(36).slice(2)\n}\n"],"names":[],"mappings":";;;AACO,SAAS,oBAA4B;IAEtC,IAAA,OAAO,SAAW,KAAa;QAE3B,MAAA,QAAQ,IAAI,WAAW,EAAE;QAC/B,OAAO,eAAA,CAAgB,KAAK;QAG5B,IAAI,MAAM;QACV,IAAA,IAAS,IAAI,GAAG,IAAI,MAAM,MAAA,EAAQ,IAEzB,OAAA,KAAA,CAAM,CAAC,CAAA,CAAE,QAAA,CAAS,EAAE,EAAE,QAAA,CAAS,GAAG,GAAG;QAI9C,OAAA,MAAM,KAAK,GAAG,EAAE,OAAA,CAAQ,OAAO,GAAG,EAAE,OAAA,CAAQ,OAAO,GAAG,EAAE,OAAA,CAAQ,SAAS,EAAE,GAEpE;IAAA;IAGT,OAAO,KAAK,MAAA,GAAS,QAAA,CAAS,EAAE,EAAE,KAAA,CAAM,CAAC;AAC3C","ignoreList":[0]}},
    {"offset": {"line": 2328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2334, "column": 0}, "map": {"version":3,"file":"toggle-preview-access-sharing.js","sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/preview-url-secret/src/togglePreviewAccessSharing.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {schemaIdSingleton as _id, schemaTypeSingleton as _type, apiVersion, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<{secret: string}> {\n  const client = _client.withConfig({apiVersion})\n  const newSecret = generateUrlSecret()\n  const patch = client.patch(_id).set({secret: newSecret, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n\n  return {secret: newSecret}\n}\n\n/** @internal */\nexport async function disablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<void> {\n  const client = _client.withConfig({apiVersion})\n  const patch = client.patch(_id).set({secret: null, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n}\n\nexport type {SanityClientLike}\n"],"names":["_id","_type"],"mappings":";;;;;;;;AAMA,eAAsB,2BACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EAC2B;IACrB,MAAA,SAAS,QAAQ,UAAA,CAAW;iMAAC,aAAA;IAAA,CAAW,GACxC,gBAAY,uNAAA,KACZ,QAAQ,OAAO,KAAA,8KAAMA,oBAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;QAAW;QAAW;IAAA,CAAO;IACpE,OAAA,MAAA,OACH,WAAA,GACA,iBAAA,CAAkB;QAAA,kLAACA,oBAAAA;QAAKC,oLAAAA,sBAAAA;QAAO;QAAQ;QAAW;IAAO,CAAA,EACzD,KAAA,CAAM,KAAK,EACX,MAAA,CAAO;0LAAC,MAAA;IAAA,CAAI,GAER;QAAC,QAAQ;IAAS;AAC3B;AAGA,eAAsB,4BACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EACe;IACf,MAAM,SAAS,QAAQ,UAAA,CAAW;iMAAC,aAAA;IAAW,CAAA,GACxC,QAAQ,OAAO,KAAA,8KAAMD,oBAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;QAAM;QAAW;IAAA,CAAO;IACrE,MAAM,OACH,WAAA,CAAY,EACZ,iBAAA,CAAkB;QAACA,kLAAAA,oBAAAA;QAAKC,oLAAAA,sBAAAA;QAAO;QAAQ;QAAW;IAAM,CAAC,EACzD,KAAA,CAAM,KAAK,EACX,MAAA,CAAO;0LAAC,MAAA;IAAA,CAAI;AACjB","ignoreList":[0]}},
    {"offset": {"line": 2382, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2388, "column": 0}, "map": {"version":3,"file":"define-preview-url.js","sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/preview-url-secret/src/definePreviewUrl.ts"],"sourcesContent":["import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from './constants'\nimport type {\n  PreviewUrlResolver,\n  PreviewUrlResolverContext,\n  PreviewUrlResolverOptions,\n} from './types'\n\n/**\n * @internal\n */\nexport function definePreviewUrl<SanityClientType>(\n  options: PreviewUrlResolverOptions,\n): PreviewUrlResolver<SanityClientType> {\n  const {\n    draftMode,\n    previewMode,\n    origin = typeof location === 'undefined' ? 'https://localhost' : location.origin,\n  } = options\n  const enableUrl = previewMode?.enable || draftMode?.enable\n  let {preview = '/'} = options\n  const productionUrl = new URL(preview, origin)\n  const enablePreviewModeUrl = enableUrl ? new URL(enableUrl, origin) : undefined\n\n  return async (context): Promise<string> => {\n    try {\n      if (context.previewSearchParam) {\n        const restoredUrl = new URL(context.previewSearchParam, productionUrl)\n        if (restoredUrl.origin === productionUrl.origin) {\n          preview = `${restoredUrl.pathname}${restoredUrl.search}`\n        }\n      }\n    } catch {\n      // ignore\n    }\n    // Prevent infinite recursion\n    if (\n      typeof location !== 'undefined' &&\n      location.origin === productionUrl.origin &&\n      context.studioBasePath &&\n      (preview.startsWith(`${context.studioBasePath}/`) || preview === context.studioBasePath)\n    ) {\n      preview = options.preview || '/'\n    }\n    const previewUrl = new URL(preview, productionUrl)\n    if (enablePreviewModeUrl) {\n      const enablePreviewModeRequestUrl = new URL(enablePreviewModeUrl)\n      const {searchParams} = enablePreviewModeRequestUrl\n      searchParams.set(urlSearchParamPreviewSecret, context.previewUrlSecret)\n      searchParams.set(urlSearchParamPreviewPerspective, context.studioPreviewPerspective)\n      if (previewUrl.pathname !== enablePreviewModeRequestUrl.pathname) {\n        searchParams.set(\n          urlSearchParamPreviewPathname,\n          `${previewUrl.pathname}${previewUrl.search}`,\n        )\n      }\n\n      return enablePreviewModeRequestUrl.toString()\n    }\n    return previewUrl.toString()\n  }\n}\n\nexport type {PreviewUrlResolver, PreviewUrlResolverContext, PreviewUrlResolverOptions}\n"],"names":[],"mappings":";;;;;AAcO,SAAS,iBACd,OAAA,EACsC;IAChC,MAAA,EACJ,SAAA,EACA,WAAA,EACA,SAAS,OAAO,WAAa,MAAc,sBAAsB,SAAS,MAAA,EACxE,GAAA,SACE,YAAY,aAAa,UAAU,WAAW;IAChD,IAAA,EAAC,UAAU,GAAA,CAAA,CAAA,GAAO;IACtB,MAAM,gBAAgB,IAAI,IAAI,SAAS,MAAM,GACvC,uBAAuB,YAAY,IAAI,IAAI,WAAW,MAAM,IAAI,KAAA;IAEtE,OAAO,OAAO,YAA6B;QACrC,IAAA;YACF,IAAI,QAAQ,kBAAA,EAAoB;gBAC9B,MAAM,cAAc,IAAI,IAAI,QAAQ,kBAAA,EAAoB,aAAa;gBACjE,YAAY,MAAA,KAAW,cAAc,MAAA,IAAA,CACvC,UAAU,GAAG,YAAY,QAAQ,GAAG,YAAY,MAAM,EAAA;YAAA;QAE1D,EAAA,OACM,CAAA;QAKN,OAAO,WAAa,OACpB,SAAS,MAAA,KAAW,cAAc,MAAA,IAClC,QAAQ,cAAA,IAAA,CACP,QAAQ,UAAA,CAAW,GAAG,QAAQ,cAAc,CAAA,CAAA,CAAG,KAAK,YAAY,QAAQ,cAAA,KAAA,CAEzE,UAAU,QAAQ,OAAA,IAAW,GAAA;QAE/B,MAAM,aAAa,IAAI,IAAI,SAAS,aAAa;QACjD,IAAI,sBAAsB;YACxB,MAAM,8BAA8B,IAAI,IAAI,oBAAoB,GAC1D,EAAC,YAAA,EAAA,GAAgB;YACvB,OAAA,aAAa,GAAA,8KAAI,8BAAA,EAA6B,QAAQ,gBAAgB,GACtE,aAAa,GAAA,8KAAI,mCAAA,EAAkC,QAAQ,wBAAwB,GAC/E,WAAW,QAAA,KAAa,4BAA4B,QAAA,IACtD,aAAa,GAAA,8KACX,gCAAA,EACA,GAAG,WAAW,QAAQ,GAAG,WAAW,MAAM,EAAA,GAIvC,4BAA4B,QAAA,CAAS;QAAA;QAE9C,OAAO,WAAW,QAAA,CAAS;IAC7B;AACF","ignoreList":[0]}},
    {"offset": {"line": 2415, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2421, "column": 0}, "map": {"version":3,"file":"create-secret.js","sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/preview-url-secret/src/createPreviewSecret.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {uuid} from '@sanity/uuid'\nimport {apiVersion, deleteExpiredSecretsQuery, schemaType, SECRET_TTL, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function createPreviewSecret(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n  id = uuid(),\n): Promise<{secret: string; expiresAt: Date}> {\n  const client = _client.withConfig({apiVersion})\n\n  try {\n    const expiresAt = new Date(Date.now() + 1000 * SECRET_TTL)\n    const _id = `drafts.${id}`\n    const newSecret = generateUrlSecret()\n    const patch = client.patch(_id).set({secret: newSecret, source, studioUrl, userId})\n    await client.transaction().createOrReplace({_id, _type: schemaType}).patch(patch).commit({tag})\n\n    return {secret: newSecret, expiresAt}\n  } finally {\n    try {\n      // Garbage collect expired secrets\n      await client.delete({query: deleteExpiredSecretsQuery})\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to delete expired secrets', err)\n    }\n  }\n}\n\nexport type {SanityClientLike}\n"],"names":[],"mappings":";;;;;;;;;AAOA,eAAsB,oBACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EACA,wOAAK,OAAA,GAAA,EACuC;IAC5C,MAAM,SAAS,QAAQ,UAAA,CAAW;iMAAC,aAAA;IAAA,CAAW;IAE1C,IAAA;QACF,MAAM,YAAY,IAAI,KAAK,KAAK,GAAA,CAAI,IAAI,mLAAO,aAAU,GACnD,MAAM,CAAA,OAAA,EAAU,EAAE,EAAA,EAClB,aAAY,0NAAA,CAAkB,IAC9B,QAAQ,OAAO,KAAA,CAAM,GAAG,EAAE,GAAA,CAAI;YAAC,QAAQ;YAAW;YAAQ;YAAW;QAAA,CAAO;QAC5E,OAAA,MAAA,OAAO,WAAA,GAAc,eAAA,CAAgB;YAAC;YAAK,oLAAO,aAAA;QAAA,CAAW,EAAE,KAAA,CAAM,KAAK,EAAE,MAAA,CAAO;8LAAC,MAAA;QAAA,CAAI,GAEvF;YAAC,QAAQ;YAAW;QAAS;IAAA,SACpC;QACI,IAAA;YAEF,MAAM,OAAO,MAAA,CAAO;gBAAC,oLAAO,4BAAA;YAAA,CAA0B;QAAA,EAAA,OAC/C,KAAK;YAEJ,QAAA,KAAA,CAAM,oCAAoC,GAAG;QAAA;IACvD;AAEJ","ignoreList":[0]}},
    {"offset": {"line": 2462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2468, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/path-to-regexp/src/index.ts"],"sourcesContent":["/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2881, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2887, "column": 0}, "map": {"version":3,"file":"resolveEditInfo.js","sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/client/src/csm/studioPath.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/client/src/csm/getPublishedId.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/client/src/csm/jsonPath.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/client/src/csm/resolveMapping.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/client/src/csm/isArray.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/client/src/csm/isRecord.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/client/src/csm/walkMap.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/client/src/csm/createEditUrl.ts","file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/%40sanity/client/src/csm/resolveEditInfo.ts"],"sourcesContent":["/** @alpha */\nexport type KeyedSegment = {_key: string}\n\n/** @alpha */\nexport type IndexTuple = [number | '', number | '']\n\n/** @alpha */\nexport type PathSegment = string | number | KeyedSegment | IndexTuple\n\n/** @alpha */\nexport type Path = PathSegment[]\n\nconst rePropName =\n  /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g\n/** @internal */\nexport const reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/\nconst reIndexTuple = /^\\d*:\\d*$/\n\n/** @internal */\nexport function isIndexSegment(segment: PathSegment): segment is number {\n  return typeof segment === 'number' || (typeof segment === 'string' && /^\\[\\d+\\]$/.test(segment))\n}\n\n/** @internal */\nexport function isKeySegment(segment: PathSegment): segment is KeyedSegment {\n  if (typeof segment === 'string') {\n    return reKeySegment.test(segment.trim())\n  }\n\n  return typeof segment === 'object' && '_key' in segment\n}\n\n/** @internal */\nexport function isIndexTuple(segment: PathSegment): segment is IndexTuple {\n  if (typeof segment === 'string' && reIndexTuple.test(segment)) {\n    return true\n  }\n\n  if (!Array.isArray(segment) || segment.length !== 2) {\n    return false\n  }\n\n  const [from, to] = segment\n  return (typeof from === 'number' || from === '') && (typeof to === 'number' || to === '')\n}\n\n/** @internal */\nexport function get<Result = unknown, Fallback = unknown>(\n  obj: unknown,\n  path: Path | string,\n  defaultVal?: Fallback,\n): Result | typeof defaultVal {\n  const select = typeof path === 'string' ? fromString(path) : path\n  if (!Array.isArray(select)) {\n    throw new Error('Path must be an array or a string')\n  }\n\n  let acc: unknown | undefined = obj\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i]\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc)) {\n        return defaultVal\n      }\n\n      acc = acc[segment]\n    }\n\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc)) {\n        return defaultVal\n      }\n\n      acc = acc.find((item) => item._key === segment._key)\n    }\n\n    if (typeof segment === 'string') {\n      acc =\n        typeof acc === 'object' && acc !== null\n          ? ((acc as Record<string, unknown>)[segment] as Result)\n          : undefined\n    }\n\n    if (typeof acc === 'undefined') {\n      return defaultVal\n    }\n  }\n\n  return acc as Result\n}\n\n/** @alpha */\nexport function toString(path: Path): string {\n  if (!Array.isArray(path)) {\n    throw new Error('Path is not an array')\n  }\n\n  return path.reduce<string>((target, segment, i) => {\n    const segmentType = typeof segment\n    if (segmentType === 'number') {\n      return `${target}[${segment}]`\n    }\n\n    if (segmentType === 'string') {\n      const separator = i === 0 ? '' : '.'\n      return `${target}${separator}${segment}`\n    }\n\n    if (isKeySegment(segment) && segment._key) {\n      return `${target}[_key==\"${segment._key}\"]`\n    }\n\n    if (Array.isArray(segment)) {\n      const [from, to] = segment\n      return `${target}[${from}:${to}]`\n    }\n\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``)\n  }, '')\n}\n\n/** @alpha */\nexport function fromString(path: string): Path {\n  if (typeof path !== 'string') {\n    throw new Error('Path is not a string')\n  }\n\n  const segments = path.match(rePropName)\n  if (!segments) {\n    throw new Error('Invalid path string')\n  }\n\n  return segments.map(parsePathSegment)\n}\n\nfunction parsePathSegment(segment: string): PathSegment {\n  if (isIndexSegment(segment)) {\n    return parseIndexSegment(segment)\n  }\n\n  if (isKeySegment(segment)) {\n    return parseKeySegment(segment)\n  }\n\n  if (isIndexTuple(segment)) {\n    return parseIndexTupleSegment(segment)\n  }\n\n  return segment\n}\n\nfunction parseIndexSegment(segment: string): PathSegment {\n  return Number(segment.replace(/[^\\d]/g, ''))\n}\n\nfunction parseKeySegment(segment: string): KeyedSegment {\n  const segments = segment.match(reKeySegment)\n  return {_key: segments![1]}\n}\n\nfunction parseIndexTupleSegment(segment: string): IndexTuple {\n  const [from, to] = segment.split(':').map((seg) => (seg === '' ? seg : Number(seg)))\n  return [from, to]\n}\n","export const DRAFTS_PREFIX = 'drafts.'\n\n/** @internal */\nexport function getPublishedId(id: string): string {\n  if (id.startsWith(DRAFTS_PREFIX)) {\n    return id.slice(DRAFTS_PREFIX.length)\n  }\n\n  return id\n}\n","import * as studioPath from './studioPath'\nimport type {\n  ContentSourceMapParsedPath,\n  ContentSourceMapParsedPathKeyedSegment,\n  ContentSourceMapPaths,\n  Path,\n} from './types'\n\nconst ESCAPE: Record<string, string> = {\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  \"'\": \"\\\\'\",\n  '\\\\': '\\\\\\\\',\n}\n\nconst UNESCAPE: Record<string, string> = {\n  '\\\\f': '\\f',\n  '\\\\n': '\\n',\n  '\\\\r': '\\r',\n  '\\\\t': '\\t',\n  \"\\\\'\": \"'\",\n  '\\\\\\\\': '\\\\',\n}\n\n/**\n * @internal\n */\nexport function jsonPath(path: ContentSourceMapParsedPath): ContentSourceMapPaths[number] {\n  return `$${path\n    .map((segment) => {\n      if (typeof segment === 'string') {\n        const escapedKey = segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => {\n          return ESCAPE[match]\n        })\n        return `['${escapedKey}']`\n      }\n\n      if (typeof segment === 'number') {\n        return `[${segment}]`\n      }\n\n      if (segment._key !== '') {\n        const escapedKey = segment._key.replace(/['\\\\]/g, (match) => {\n          return ESCAPE[match]\n        })\n        return `[?(@._key=='${escapedKey}')]`\n      }\n\n      return `[${segment._index}]`\n    })\n    .join('')}`\n}\n\n/**\n * @internal\n */\nexport function parseJsonPath(path: ContentSourceMapPaths[number]): ContentSourceMapParsedPath {\n  const parsed: ContentSourceMapParsedPath = []\n\n  const parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g\n  let match: RegExpExecArray | null\n\n  while ((match = parseRe.exec(path)) !== null) {\n    if (match[1] !== undefined) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => {\n        return UNESCAPE[m]\n      })\n\n      parsed.push(key)\n      continue\n    }\n\n    if (match[2] !== undefined) {\n      parsed.push(parseInt(match[2], 10))\n      continue\n    }\n\n    if (match[3] !== undefined) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => {\n        return UNESCAPE[m]\n      })\n\n      parsed.push({\n        _key,\n        _index: -1,\n      })\n      continue\n    }\n  }\n\n  return parsed\n}\n\n/**\n * @internal\n */\nexport function jsonPathToStudioPath(path: ContentSourceMapParsedPath): Path {\n  return path.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (segment._key !== '') {\n      return {_key: segment._key}\n    }\n\n    if (segment._index !== -1) {\n      return segment._index\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n\n/**\n * @internal\n */\nexport function studioPathToJsonPath(path: Path | string): ContentSourceMapParsedPath {\n  const parsedPath = typeof path === 'string' ? studioPath.fromString(path) : path\n\n  return parsedPath.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (Array.isArray(segment)) {\n      throw new Error(`IndexTuple segments aren't supported:${JSON.stringify(segment)}`)\n    }\n\n    if (isContentSourceMapParsedPathKeyedSegment(segment)) {\n      return segment\n    }\n\n    if (segment._key) {\n      return {_key: segment._key, _index: -1}\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n\nfunction isContentSourceMapParsedPathKeyedSegment(\n  segment: studioPath.PathSegment | ContentSourceMapParsedPath[number],\n): segment is ContentSourceMapParsedPathKeyedSegment {\n  return typeof segment === 'object' && '_key' in segment && '_index' in segment\n}\n\n/**\n * @internal\n */\nexport function jsonPathToMappingPath(path: ContentSourceMapParsedPath): (string | number)[] {\n  return path.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (segment._index !== -1) {\n      return segment._index\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n","import {jsonPath, jsonPathToMappingPath} from './jsonPath'\nimport type {ContentSourceMap, ContentSourceMapMapping, ContentSourceMapParsedPath} from './types'\n\n/**\n * @internal\n */\nexport function resolveMapping(\n  resultPath: ContentSourceMapParsedPath,\n  csm?: ContentSourceMap,\n):\n  | {\n      mapping: ContentSourceMapMapping\n      matchedPath: string\n      pathSuffix: string\n    }\n  | undefined {\n  if (!csm?.mappings) {\n    return undefined\n  }\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath))\n\n  if (csm.mappings[resultMappingPath] !== undefined) {\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: '',\n    }\n  }\n\n  const mappings = Object.entries(csm.mappings)\n    .filter(([key]) => resultMappingPath.startsWith(key))\n    .sort(([key1], [key2]) => key2.length - key1.length)\n\n  if (mappings.length == 0) {\n    return undefined\n  }\n\n  const [matchedPath, mapping] = mappings[0]\n  const pathSuffix = resultMappingPath.substring(matchedPath.length)\n  return {mapping, matchedPath, pathSuffix}\n}\n","/** @internal */\nexport function isArray(value: unknown): value is Array<unknown> {\n  return value !== null && Array.isArray(value)\n}\n","/** @internal */\nexport function isRecord(value: unknown): value is Record<string, unknown> {\n  return typeof value === 'object' && value !== null\n}\n","import {isArray} from './isArray'\nimport {isRecord} from './isRecord'\nimport type {ContentSourceMapParsedPath, WalkMapFn} from './types'\n\n/**\n * generic way to walk a nested object or array and apply a mapping function to each value\n * @internal\n */\nexport function walkMap(\n  value: unknown,\n  mappingFn: WalkMapFn,\n  path: ContentSourceMapParsedPath = [],\n): unknown {\n  if (isArray(value)) {\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v['_key']\n        if (typeof _key === 'string') {\n          return walkMap(v, mappingFn, path.concat({_key, _index: idx}))\n        }\n      }\n\n      return walkMap(v, mappingFn, path.concat(idx))\n    })\n  }\n\n  if (isRecord(value)) {\n    // Handle Portable Text in a faster way\n    if (value._type === 'block' || value._type === 'span') {\n      const result = {...value}\n      if (value._type === 'block') {\n        result.children = walkMap(value.children, mappingFn, path.concat('children'))\n      } else if (value._type === 'span') {\n        result.text = walkMap(value.text, mappingFn, path.concat('text'))\n      }\n      return result\n    }\n\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))]),\n    )\n  }\n\n  return mappingFn(value, path)\n}\n","import {DRAFTS_PREFIX, getPublishedId} from './getPublishedId'\nimport {jsonPathToStudioPath} from './jsonPath'\nimport * as studioPath from './studioPath'\nimport type {CreateEditUrlOptions, EditIntentUrl, StudioBaseUrl} from './types'\n\n/** @internal */\nexport function createEditUrl(options: CreateEditUrlOptions): `${StudioBaseUrl}${EditIntentUrl}` {\n  const {\n    baseUrl,\n    workspace: _workspace = 'default',\n    tool: _tool = 'default',\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset,\n  } = options\n\n  if (!baseUrl) {\n    throw new Error('baseUrl is required')\n  }\n  if (!path) {\n    throw new Error('path is required')\n  }\n  if (!_id) {\n    throw new Error('id is required')\n  }\n  if (baseUrl !== '/' && baseUrl.endsWith('/')) {\n    throw new Error('baseUrl must not end with a slash')\n  }\n\n  const workspace = _workspace === 'default' ? undefined : _workspace\n  const tool = _tool === 'default' ? undefined : _tool\n  const id = getPublishedId(_id)\n  const stringifiedPath = Array.isArray(path)\n    ? studioPath.toString(jsonPathToStudioPath(path))\n    : path\n\n  // eslint-disable-next-line no-warning-comments\n  // @TODO Using searchParams as a temporary workaround until `@sanity/overlays` can decode state from the path reliably\n  const searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath,\n  })\n  if (workspace) {\n    searchParams.set('workspace', workspace)\n  }\n  if (tool) {\n    searchParams.set('tool', tool)\n  }\n  if (projectId) {\n    searchParams.set('projectId', projectId)\n  }\n  if (dataset) {\n    searchParams.set('dataset', dataset)\n  }\n  if (_id.startsWith(DRAFTS_PREFIX)) {\n    searchParams.set('isDraft', '')\n  }\n\n  const segments = [baseUrl === '/' ? '' : baseUrl]\n  if (workspace) {\n    segments.push(workspace)\n  }\n  const routerParams = [\n    'mode=presentation',\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`,\n  ]\n  if (tool) {\n    routerParams.push(`tool=${tool}`)\n  }\n  segments.push('intent', 'edit', `${routerParams.join(';')}?${searchParams}`)\n  return segments.join('/') as unknown as `${StudioBaseUrl}${EditIntentUrl}`\n}\n","import {parseJsonPath} from './jsonPath'\nimport {resolveMapping} from './resolveMapping'\nimport type {\n  CreateEditUrlOptions,\n  ResolveEditInfoOptions,\n  StudioBaseRoute,\n  StudioBaseUrl,\n  StudioUrl,\n} from './types'\n\n/** @internal */\nexport function resolveEditInfo(options: ResolveEditInfoOptions): CreateEditUrlOptions | undefined {\n  const {resultSourceMap: csm, resultPath} = options\n  const {mapping, pathSuffix} = resolveMapping(resultPath, csm) || {}\n\n  if (!mapping) {\n    // console.warn('no mapping for path', { path: resultPath, sourceMap: csm })\n    return undefined\n  }\n\n  if (mapping.source.type === 'literal') {\n    return undefined\n  }\n\n  if (mapping.source.type === 'unknown') {\n    return undefined\n  }\n\n  const sourceDoc = csm.documents[mapping.source.document]\n  const sourcePath = csm.paths[mapping.source.path]\n\n  if (sourceDoc && sourcePath) {\n    const {baseUrl, workspace, tool} = resolveStudioBaseRoute(\n      typeof options.studioUrl === 'function' ? options.studioUrl(sourceDoc) : options.studioUrl,\n    )\n    if (!baseUrl) return undefined\n    const {_id, _type, _projectId, _dataset} = sourceDoc\n    return {\n      baseUrl,\n      workspace,\n      tool,\n      id: _id,\n      type: _type,\n      path: parseJsonPath(sourcePath + pathSuffix),\n      projectId: _projectId,\n      dataset: _dataset,\n    } satisfies CreateEditUrlOptions\n  }\n\n  return undefined\n}\n\n/** @internal */\nexport function resolveStudioBaseRoute(studioUrl: StudioUrl): StudioBaseRoute {\n  let baseUrl: StudioBaseUrl = typeof studioUrl === 'string' ? studioUrl : studioUrl.baseUrl\n  if (baseUrl !== '/') {\n    baseUrl = baseUrl.replace(/\\/$/, '')\n  }\n  if (typeof studioUrl === 'string') {\n    return {baseUrl}\n  }\n  return {...studioUrl, baseUrl}\n}\n"],"names":["studioPath.fromString","studioPath.toString"],"mappings":";;;;;;;;;;;;;;;;;AAYA,MAAM,aACJ,oGAEW,eAAe,4BACtB,eAAe;AAGd,SAAS,eAAe,OAAA,EAAyC;IAC/D,OAAA,OAAO,WAAY,YAAa,OAAO,WAAY,YAAY,YAAY,IAAA,CAAK,OAAO;AAChG;AAGO,SAAS,aAAa,OAAA,EAA+C;IAC1E,OAAI,OAAO,WAAY,WACd,aAAa,IAAA,CAAK,QAAQ,IAAA,CAAK,CAAC,IAGlC,OAAO,WAAY,YAAY,UAAU;AAClD;AAGO,SAAS,aAAa,OAAA,EAA6C;IACxE,IAAI,OAAO,WAAY,YAAY,aAAa,IAAA,CAAK,OAAO,GACnD,OAAA,CAAA;IAGT,IAAI,CAAC,MAAM,OAAA,CAAQ,OAAO,KAAK,QAAQ,MAAA,KAAW,GACzC,OAAA,CAAA;IAGH,MAAA,CAAC,MAAM,EAAE,CAAA,GAAI;IACX,OAAA,CAAA,OAAO,QAAS,YAAY,SAAS,EAAA,KAAA,CAAQ,OAAO,MAAO,YAAY,OAAO,EAAA;AACxF;AAGgB,SAAA,IACd,GAAA,EACA,IAAA,EACA,UAAA,EAC4B;IAC5B,MAAM,SAAS,OAAO,QAAS,WAAW,WAAW,IAAI,IAAI;IACzD,IAAA,CAAC,MAAM,OAAA,CAAQ,MAAM,GACjB,MAAA,IAAI,MAAM,mCAAmC;IAGrD,IAAI,MAA2B;IAC/B,IAAA,IAAS,IAAI,GAAG,IAAI,OAAO,MAAA,EAAQ,IAAK;QAChC,MAAA,UAAU,MAAA,CAAO,CAAC,CAAA;QACpB,IAAA,eAAe,OAAO,GAAG;YACvB,IAAA,CAAC,MAAM,OAAA,CAAQ,GAAG,GACb,OAAA;YAGT,MAAM,GAAA,CAAI,OAAO,CAAA;QAAA;QAGf,IAAA,aAAa,OAAO,GAAG;YACrB,IAAA,CAAC,MAAM,OAAA,CAAQ,GAAG,GACb,OAAA;YAGT,MAAM,IAAI,IAAA,CAAK,CAAC,OAAS,KAAK,IAAA,KAAS,QAAQ,IAAI;QAAA;QAUrD,IAPI,OAAO,WAAY,YAAA,CACrB,MACE,OAAO,OAAQ,YAAY,QAAQ,OAC7B,GAAA,CAAgC,OAAO,CAAA,GACzC,KAAA,CAAA,GAGJ,OAAO,MAAQ,KACV,OAAA;IAAA;IAIJ,OAAA;AACT;AAGO,SAAS,SAAS,IAAA,EAAoB;IACvC,IAAA,CAAC,MAAM,OAAA,CAAQ,IAAI,GACf,MAAA,IAAI,MAAM,sBAAsB;IAGxC,OAAO,KAAK,MAAA,CAAe,CAAC,QAAQ,SAAS,MAAM;QACjD,MAAM,cAAc,OAAO;QAC3B,IAAI,gBAAgB,UACX,OAAA,GAAG,MAAM,CAAA,CAAA,EAAI,OAAO,CAAA,CAAA,CAAA;QAG7B,IAAI,gBAAgB,UAEX,OAAA,GAAG,MAAM,GADE,MAAM,IAAI,KAAK,GACL,GAAG,OAAO,EAAA;QAGpC,IAAA,aAAa,OAAO,KAAK,QAAQ,IAAA,EACnC,OAAO,GAAG,MAAM,CAAA,QAAA,EAAW,QAAQ,IAAI,CAAA,EAAA,CAAA;QAGrC,IAAA,MAAM,OAAA,CAAQ,OAAO,GAAG;YACpB,MAAA,CAAC,MAAM,EAAE,CAAA,GAAI;YACnB,OAAO,GAAG,MAAM,CAAA,CAAA,EAAI,IAAI,CAAA,CAAA,EAAI,EAAE,CAAA,CAAA,CAAA;QAAA;QAGhC,MAAM,IAAI,MAAM,CAAA,2BAAA,EAA8B,KAAK,SAAA,CAAU,OAAO,CAAC,CAAA,EAAA,CAAI;IAAA,GACxE,EAAE;AACP;AAGO,SAAS,WAAW,IAAA,EAAoB;IAC7C,IAAI,OAAO,QAAS,UACZ,MAAA,IAAI,MAAM,sBAAsB;IAGlC,MAAA,WAAW,KAAK,KAAA,CAAM,UAAU;IACtC,IAAI,CAAC,UACG,MAAA,IAAI,MAAM,qBAAqB;IAGhC,OAAA,SAAS,GAAA,CAAI,gBAAgB;AACtC;AAEA,SAAS,iBAAiB,OAAA,EAA8B;IACtD,OAAI,eAAe,OAAO,IACjB,kBAAkB,OAAO,IAG9B,aAAa,OAAO,IACf,gBAAgB,OAAO,IAG5B,aAAa,OAAO,IACf,uBAAuB,OAAO,IAGhC;AACT;AAEA,SAAS,kBAAkB,OAAA,EAA8B;IACvD,OAAO,OAAO,QAAQ,OAAA,CAAQ,UAAU,EAAE,CAAC;AAC7C;AAEA,SAAS,gBAAgB,OAAA,EAA+B;IAEtD,OAAO;QAAC,MADS,QAAQ,KAAA,CAAM,YAAY,CAAA,CACnB,CAAC,CAAA;IAAC;AAC5B;AAEA,SAAS,uBAAuB,OAAA,EAA6B;IAC3D,MAAM,CAAC,MAAM,EAAE,CAAA,GAAI,QAAQ,KAAA,CAAM,GAAG,EAAE,GAAA,CAAI,CAAC,MAAS,QAAQ,KAAK,MAAM,OAAO,GAAG,CAAE;IAC5E,OAAA;QAAC;QAAM,EAAE;KAAA;AAClB;;;;;;;;;;;ACnKO,MAAM,gBAAgB;AAGtB,SAAS,eAAe,EAAA,EAAoB;IAC7C,OAAA,GAAG,UAAA,CAAW,aAAa,IACtB,GAAG,KAAA,CAAM,cAAc,MAAM,IAG/B;AACT;ACDA,MAAM,SAAiC;IACrC,MAAM;IACN,MAAM;IACN,MAAM;IACN,KAAM;IACN,KAAK;IACL,MAAM;AACR,GAEM,WAAmC;IACvC,OAAO;IACP,OAAO,CAAA;AAAA,CAAA;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACP,QAAQ;AACV;AAKO,SAAS,SAAS,IAAA,EAAiE;IACjF,OAAA,CAAA,CAAA,EAAI,KACR,GAAA,CAAI,CAAC,UACA,OAAO,WAAY,WAId,CAAA,EAAA,EAHY,QAAQ,OAAA,CAAQ,kBAAkB,CAAC,QAC7C,MAAA,CAAO,KAAK,CACpB,CACqB,CAAA,EAAA,CAAA,GAGpB,OAAO,WAAY,WACd,CAAA,CAAA,EAAI,OAAO,CAAA,CAAA,CAAA,GAGhB,QAAQ,IAAA,KAAS,KAIZ,CAAA,YAAA,EAHY,QAAQ,IAAA,CAAK,OAAA,CAAQ,UAAU,CAAC,QAC1C,MAAA,CAAO,KAAK,CACpB,CAC+B,CAAA,GAAA,CAAA,GAG3B,CAAA,CAAA,EAAI,QAAQ,MAAM,CAAA,CAAA,CAC1B,EACA,IAAA,CAAK,EAAE,CAAC,EAAA;AACb;AAKO,SAAS,cAAc,IAAA,EAAiE;IACvF,MAAA,SAAqC,EAAA,EAErC,UAAU;IACZ,IAAA;IAEJ,MAAA,CAAQ,QAAQ,QAAQ,IAAA,CAAK,IAAI,CAAA,MAAO,MAAM;QACxC,IAAA,KAAA,CAAM,CAAC,CAAA,KAAM,KAAA,GAAW;YACpB,MAAA,MAAM,KAAA,CAAM,CAAC,CAAA,CAAE,OAAA,CAAQ,qBAAqB,CAAC,IAC1C,QAAA,CAAS,CAAC,CAClB;YAED,OAAO,IAAA,CAAK,GAAG;YACf;QAAA;QAGE,IAAA,KAAA,CAAM,CAAC,CAAA,KAAM,KAAA,GAAW;YAC1B,OAAO,IAAA,CAAK,SAAS,KAAA,CAAM,CAAC,CAAA,EAAG,EAAE,CAAC;YAClC;QAAA;QAGE,IAAA,KAAA,CAAM,CAAC,CAAA,KAAM,KAAA,GAAW;YACpB,MAAA,OAAO,KAAA,CAAM,CAAC,CAAA,CAAE,OAAA,CAAQ,YAAY,CAAC,IAClC,QAAA,CAAS,CAAC,CAClB;YAED,OAAO,IAAA,CAAK;gBACV;gBACA,QAAQ,CAAA;YAAA,CACT;YACD;QAAA;IACF;IAGK,OAAA;AACT;AAKO,SAAS,qBAAqB,IAAA,EAAwC;IACpE,OAAA,KAAK,GAAA,CAAI,CAAC,YAAY;QAK3B,IAJI,OAAO,WAAY,YAInB,OAAO,WAAY,UACd,OAAA;QAGT,IAAI,QAAQ,IAAA,KAAS,IACZ,OAAA;YAAC,MAAM,QAAQ,IAAA;QAAI;QAG5B,IAAI,QAAQ,MAAA,KAAW,CAAA,GACrB,OAAO,QAAQ,MAAA;QAGjB,MAAM,IAAI,MAAM,CAAA,gBAAA,EAAmB,KAAK,SAAA,CAAU,OAAO,CAAC,EAAE;IAAA,CAC7D;AACH;AAKO,SAAS,qBAAqB,IAAA,EAAiD;IACjE,OAAA,CAAA,OAAO,QAAS,WAAWA,WAAsB,IAAI,IAAI,IAAA,EAE1D,GAAA,CAAI,CAAC,YAAY;QAKjC,IAJI,OAAO,WAAY,YAInB,OAAO,WAAY,UACd,OAAA;QAGL,IAAA,MAAM,OAAA,CAAQ,OAAO,GACvB,MAAM,IAAI,MAAM,CAAA,qCAAA,EAAwC,KAAK,SAAA,CAAU,OAAO,CAAC,EAAE;QAGnF,IAAI,yCAAyC,OAAO,GAC3C,OAAA;QAGT,IAAI,QAAQ,IAAA,EACV,OAAO;YAAC,MAAM,QAAQ,IAAA;YAAM,QAAQ,CAAA;QAAE;QAGxC,MAAM,IAAI,MAAM,CAAA,gBAAA,EAAmB,KAAK,SAAA,CAAU,OAAO,CAAC,EAAE;IAAA,CAC7D;AACH;AAEA,SAAS,yCACP,OAAA,EACmD;IACnD,OAAO,OAAO,WAAY,YAAY,UAAU,WAAW,YAAY;AACzE;AAKO,SAAS,sBAAsB,IAAA,EAAuD;IACpF,OAAA,KAAK,GAAA,CAAI,CAAC,YAAY;QAK3B,IAJI,OAAO,WAAY,YAInB,OAAO,WAAY,UACd,OAAA;QAGT,IAAI,QAAQ,MAAA,KAAW,CAAA,GACrB,OAAO,QAAQ,MAAA;QAGjB,MAAM,IAAI,MAAM,CAAA,gBAAA,EAAmB,KAAK,SAAA,CAAU,OAAO,CAAC,EAAE;IAAA,CAC7D;AACH;AC1KgB,SAAA,eACd,UAAA,EACA,GAAA,EAOY;IACZ,IAAI,CAAC,KAAK,UACR;IAEF,MAAM,oBAAoB,SAAS,sBAAsB,UAAU,CAAC;IAEhE,IAAA,IAAI,QAAA,CAAS,iBAAiB,CAAA,KAAM,KAAA,GAC/B,OAAA;QACL,SAAS,IAAI,QAAA,CAAS,iBAAiB,CAAA;QACvC,aAAa;QACb,YAAY;IACd;IAGI,MAAA,WAAW,OAAO,OAAA,CAAQ,IAAI,QAAQ,EACzC,MAAA,CAAO,CAAC,CAAC,GAAG,CAAA,GAAM,kBAAkB,UAAA,CAAW,GAAG,CAAC,EACnD,IAAA,CAAK,CAAC,CAAC,IAAI,CAAA,EAAG,CAAC,IAAI,CAAA,GAAM,KAAK,MAAA,GAAS,KAAK,MAAM;IAErD,IAAI,SAAS,MAAA,IAAU,GACrB;IAGI,MAAA,CAAC,aAAa,OAAO,CAAA,GAAI,QAAA,CAAS,CAAC,CAAA,EACnC,aAAa,kBAAkB,SAAA,CAAU,YAAY,MAAM;IAC1D,OAAA;QAAC;QAAS;QAAa;IAAU;AAC1C;ACvCO,SAAS,QAAQ,KAAA,EAAyC;IAC/D,OAAO,UAAU,QAAQ,MAAM,OAAA,CAAQ,KAAK;AAC9C;ACFO,SAAS,SAAS,KAAA,EAAkD;IAClE,OAAA,OAAO,SAAU,YAAY,UAAU;AAChD;ACKO,SAAS,QACd,KAAA,EACA,SAAA,EACA,OAAmC,CAAA,CAAA,EAC1B;IACT,IAAI,QAAQ,KAAK,GACf,OAAO,MAAM,GAAA,CAAI,CAAC,GAAG,QAAQ;QACvB,IAAA,SAAS,CAAC,GAAG;YACf,MAAM,OAAO,EAAE,IAAA;YACf,IAAI,OAAO,QAAS,UACX,OAAA,QAAQ,GAAG,WAAW,KAAK,MAAA,CAAO;gBAAC;gBAAM,QAAQ;YAAG,CAAC,CAAC;QAAA;QAIjE,OAAO,QAAQ,GAAG,WAAW,KAAK,MAAA,CAAO,GAAG,CAAC;IAAA,CAC9C;IAGC,IAAA,SAAS,KAAK,GAAG;QAEnB,IAAI,MAAM,KAAA,KAAU,WAAW,MAAM,KAAA,KAAU,QAAQ;YAC/C,MAAA,SAAS;gBAAC,GAAG,KAAA;YAAK;YACpB,OAAA,MAAM,KAAA,KAAU,UAClB,OAAO,QAAA,GAAW,QAAQ,MAAM,QAAA,EAAU,WAAW,KAAK,MAAA,CAAO,UAAU,CAAC,IACnE,MAAM,KAAA,KAAU,UAAA,CACzB,OAAO,IAAA,GAAO,QAAQ,MAAM,IAAA,EAAM,WAAW,KAAK,MAAA,CAAO,MAAM,CAAC,CAAA,GAE3D;QAAA;QAGT,OAAO,OAAO,WAAA,CACZ,OAAO,OAAA,CAAQ,KAAK,EAAE,GAAA,CAAI,CAAC,CAAC,GAAG,CAAC,CAAA,GAAM;gBAAC;gBAAG,QAAQ,GAAG,WAAW,KAAK,MAAA,CAAO,CAAC,CAAC,CAAC;aAAC;IAClF;IAGK,OAAA,UAAU,OAAO,IAAI;AAC9B;ACtCO,SAAS,cAAc,OAAA,EAAmE;IACzF,MAAA,EACJ,OAAA,EACA,WAAW,aAAa,SAAA,EACxB,MAAM,QAAQ,SAAA,EACd,IAAI,GAAA,EACJ,IAAA,EACA,IAAA,EACA,SAAA,EACA,OAAA,EAAA,GACE;IAEJ,IAAI,CAAC,SACG,MAAA,IAAI,MAAM,qBAAqB;IAEvC,IAAI,CAAC,MACG,MAAA,IAAI,MAAM,kBAAkB;IAEpC,IAAI,CAAC,KACG,MAAA,IAAI,MAAM,gBAAgB;IAElC,IAAI,YAAY,OAAO,QAAQ,QAAA,CAAS,GAAG,GACnC,MAAA,IAAI,MAAM,mCAAmC;IAGrD,MAAM,YAAY,eAAe,YAAY,KAAA,IAAY,YACnD,OAAO,UAAU,YAAY,KAAA,IAAY,OACzC,KAAK,eAAe,GAAG,GACvB,kBAAkB,MAAM,OAAA,CAAQ,IAAI,IACtCC,SAAoB,qBAAqB,IAAI,CAAC,IAC9C,MAIE,eAAe,IAAI,gBAAgB;QACvC;QACA;QACA;QACA,MAAM;IAAA,CACP;IACG,aACF,aAAa,GAAA,CAAI,aAAa,SAAS,GAErC,QACF,aAAa,GAAA,CAAI,QAAQ,IAAI,GAE3B,aACF,aAAa,GAAA,CAAI,aAAa,SAAS,GAErC,WACF,aAAa,GAAA,CAAI,WAAW,OAAO,GAEjC,IAAI,UAAA,CAAW,aAAa,KAC9B,aAAa,GAAA,CAAI,WAAW,EAAE;IAGhC,MAAM,WAAW;QAAC,YAAY,MAAM,KAAK,OAAO;KAAA;IAC5C,aACF,SAAS,IAAA,CAAK,SAAS;IAEzB,MAAM,eAAe;QACnB;QACA,CAAA,GAAA,EAAM,EAAE,EAAA;QACR,CAAA,KAAA,EAAQ,IAAI,EAAA;QACZ,CAAA,KAAA,EAAQ,mBAAmB,eAAe,CAAC,EAAA;KAC7C;IACI,OAAA,QACF,aAAa,IAAA,CAAK,CAAA,KAAA,EAAQ,IAAI,EAAE,GAElC,SAAS,IAAA,CAAK,UAAU,QAAQ,GAAG,aAAa,IAAA,CAAK,GAAG,CAAC,CAAA,CAAA,EAAI,YAAY,EAAE,GACpE,SAAS,IAAA,CAAK,GAAG;AAC1B;AClEO,SAAS,gBAAgB,OAAA,EAAmE;IACjG,MAAM,EAAC,iBAAiB,GAAA,EAAK,UAAA,CAAA,CAAA,GAAc,SACrC,EAAC,OAAA,EAAS,UAAA,CAAc,CAAA,GAAA,eAAe,YAAY,GAAG,KAAK,CAAC;IAE9D,IAAA,CAAC,WAKD,QAAQ,MAAA,CAAO,IAAA,KAAS,aAIxB,QAAQ,MAAA,CAAO,IAAA,KAAS,WAC1B;IAGF,MAAM,YAAY,IAAI,SAAA,CAAU,QAAQ,MAAA,CAAO,QAAQ,CAAA,EACjD,aAAa,IAAI,KAAA,CAAM,QAAQ,MAAA,CAAO,IAAI,CAAA;IAEhD,IAAI,aAAa,YAAY;QAC3B,MAAM,EAAC,OAAA,EAAS,SAAA,EAAW,IAAA,CAAQ,CAAA,GAAA,uBACjC,OAAO,QAAQ,SAAA,IAAc,aAAa,QAAQ,SAAA,CAAU,SAAS,IAAI,QAAQ,SAAA;QAEnF,IAAI,CAAC,SAAS;QACd,MAAM,EAAC,GAAA,EAAK,KAAA,EAAO,UAAA,EAAY,QAAA,CAAY,CAAA,GAAA;QACpC,OAAA;YACL;YACA;YACA;YACA,IAAI;YACJ,MAAM;YACN,MAAM,cAAc,aAAa,UAAU;YAC3C,WAAW;YACX,SAAS;QACX;IAAA;AAIJ;AAGO,SAAS,uBAAuB,SAAA,EAAuC;IAC5E,IAAI,UAAyB,OAAO,aAAc,WAAW,YAAY,UAAU,OAAA;IAInF,OAHI,YAAY,OAAA,CACd,UAAU,QAAQ,OAAA,CAAQ,OAAO,EAAE,CAAA,GAEjC,OAAO,aAAc,WAChB;QAAC;IAAA,IAEH;QAAC,GAAG,SAAA;QAAW;IAAO;AAC/B","ignoreList":[0,1,2,3,4,5,6,7,8]}},
    {"offset": {"line": 3166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3172, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Rey%20Omar%20Esguerra/Downloads/reyecommerce/node_modules/suspend-react/index.js"],"sourcesContent":["const isPromise = promise => typeof promise === 'object' && typeof promise.then === 'function';\n\nconst globalCache = [];\n\nfunction shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nfunction query(fn, keys = null, preload = false, config = {}) {\n  // If no keys were given, the function is the key\n  if (keys === null) keys = [fn];\n\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) {\n        if (config.lifespan && config.lifespan > 0) {\n          if (entry.timeout) clearTimeout(entry.timeout);\n          entry.timeout = setTimeout(entry.remove, config.lifespan);\n        }\n\n        return entry.response;\n      } // If the promise is still unresolved, throw\n\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    remove: () => {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    },\n    promise: // Execute the promise\n    (isPromise(fn) ? fn : fn(...keys) // When it resolves, store its value\n    ).then(response => {\n      entry.response = response; // Remove the entry in time if a lifespan was given\n\n      if (config.lifespan && config.lifespan > 0) {\n        entry.timeout = setTimeout(entry.remove, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n    if (entry) entry.remove();\n  }\n};\n\nexport { clear, peek, preload, suspend };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
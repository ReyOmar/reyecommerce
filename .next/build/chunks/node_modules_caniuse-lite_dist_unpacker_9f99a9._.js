module.exports = {

"[project]/node_modules/caniuse-lite/dist/unpacker/browsers.js [postcss] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
module.exports.browsers = __turbopack_require__("[project]/node_modules/caniuse-lite/data/browsers.js [postcss] (ecmascript)");
}}),
"[project]/node_modules/caniuse-lite/dist/unpacker/browserVersions.js [postcss] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
module.exports.browserVersions = __turbopack_require__("[project]/node_modules/caniuse-lite/data/browserVersions.js [postcss] (ecmascript)");
}}),
"[project]/node_modules/caniuse-lite/dist/unpacker/agents.js [postcss] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
const browsers = __turbopack_require__("[project]/node_modules/caniuse-lite/dist/unpacker/browsers.js [postcss] (ecmascript)").browsers;
const versions = __turbopack_require__("[project]/node_modules/caniuse-lite/dist/unpacker/browserVersions.js [postcss] (ecmascript)").browserVersions;
const agentsData = __turbopack_require__("[project]/node_modules/caniuse-lite/data/agents.js [postcss] (ecmascript)");
function unpackBrowserVersions(versionsData) {
    return Object.keys(versionsData).reduce((usage, version)=>{
        usage[versions[version]] = versionsData[version];
        return usage;
    }, {});
}
module.exports.agents = Object.keys(agentsData).reduce((map, key)=>{
    let versionsData = agentsData[key];
    map[browsers[key]] = Object.keys(versionsData).reduce((data, entry)=>{
        if (entry === 'A') {
            data.usage_global = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === 'C') {
            data.versions = versionsData[entry].reduce((list, version)=>{
                if (version === '') {
                    list.push(null);
                } else {
                    list.push(versions[version]);
                }
                return list;
            }, []);
        } else if (entry === 'D') {
            data.prefix_exceptions = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === 'E') {
            data.browser = versionsData[entry];
        } else if (entry === 'F') {
            data.release_date = Object.keys(versionsData[entry]).reduce((map2, key2)=>{
                map2[versions[key2]] = versionsData[entry][key2];
                return map2;
            }, {});
        } else {
            // entry is B
            data.prefix = versionsData[entry];
        }
        return data;
    }, {});
    return map;
}, {});
}}),
"[project]/node_modules/caniuse-lite/dist/unpacker/feature.js [postcss] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: __turbopack_require_real__ } = __turbopack_context__;
{
'use strict';
const statuses = (()=>{
    const e = new Error("Cannot find module '../lib/statuses'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
const supported = (()=>{
    const e = new Error("Cannot find module '../lib/supported'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
const browsers = __turbopack_require__("[project]/node_modules/caniuse-lite/dist/unpacker/browsers.js [postcss] (ecmascript)").browsers;
const versions = __turbopack_require__("[project]/node_modules/caniuse-lite/dist/unpacker/browserVersions.js [postcss] (ecmascript)").browserVersions;
const MATH2LOG = Math.log(2);
function unpackSupport(cipher) {
    // bit flags
    let stats = Object.keys(supported).reduce((list, support)=>{
        if (cipher & supported[support]) list.push(support);
        return list;
    }, []);
    // notes
    let notes = cipher >> 7;
    let notesArray = [];
    while(notes){
        let note = Math.floor(Math.log(notes) / MATH2LOG) + 1;
        notesArray.unshift(`#${note}`);
        notes -= Math.pow(2, note - 1);
    }
    return stats.concat(notesArray).join(' ');
}
function unpackFeature(packed) {
    let unpacked = {
        status: statuses[packed.B],
        title: packed.C,
        shown: packed.D
    };
    unpacked.stats = Object.keys(packed.A).reduce((browserStats, key)=>{
        let browser = packed.A[key];
        browserStats[browsers[key]] = Object.keys(browser).reduce((stats, support)=>{
            let packedVersions = browser[support].split(' ');
            let unpacked2 = unpackSupport(support);
            packedVersions.forEach((v)=>stats[versions[v]] = unpacked2);
            return stats;
        }, {});
        return browserStats;
    }, {});
    return unpacked;
}
module.exports = unpackFeature;
module.exports.default = unpackFeature;
}}),

};

//# sourceMappingURL=node_modules_caniuse-lite_dist_unpacker_9f99a9._.js.map